<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy</title><link>http://openastronomy.org/Universe_OA/</link><description>This is an aggregator of openastronomy people</description><atom:link href="http://openastronomy.org/Universe_OA/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 09 Jun 2020 01:19:45 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Community Bonding Period-GSoC20</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_siddharthlal25/</link><dc:creator>siddharthlal25</dc:creator><description>&lt;div&gt;&lt;p&gt;It was around 11:30 in the night on 4th of May, the Google servers glitched for a second or so but then I could see my project on the Org’s list.&lt;/p&gt;

&lt;p&gt;Finally, I got selected for GSoC 2020 after around two months of involvement with the JuliaAstro community. Before my selection, I had primarily contributed to &lt;a href="https://github.com/JuliaAstro/Photometry.jl"&gt;Photometry.jl&lt;/a&gt; and &lt;a href="https://github.com/JuliaAstro/DustExtinction.jl"&gt;DustExtinction.jl&lt;/a&gt;, both were a part of the JuliaAstro community!&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;The next step was the community bonding phase, in this phase, I got my development setup more robust (I updated my OS, updated Atom, and also Juno). I also sharpened my Julia skills and learned the art of succinct documentation in this period. I went through the codebase of the repositories available in this community to get a flavor of Julia and it’s usage for making things work!&lt;/p&gt;

&lt;p&gt;Since I was under lockdown back in my hometown, I got quite bored and decided to start contributing towards the project. I set up the basic framework of the package and added a few basic skeletal functions after discussions about it with the mentors.&lt;/p&gt;

&lt;p&gt;At last, I would like to thank Miles, Mosè, and Yash for their guidance and prompt responses to all my dumb queries, it wouldn’t have been possible for me to start contributing without their guidance and help. A big shout-out to you guys! Thank you so much!&lt;/p&gt;

&lt;p&gt;Oh! I forget to mention my project, this summers I will be developing a package for reduction of astronomical images in Julia.&lt;/p&gt;

&lt;p&gt;Stay tuned for my upcoming blogs to know more about the project!&lt;/p&gt;

&lt;p&gt;-sl&lt;/p&gt;&lt;/div&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_siddharthlal25/</guid><pubDate>Sat, 30 May 2020 17:04:56 GMT</pubDate></item><item><title>Google Summer of Code - Blog #0!</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_pkj-m/</link><dc:creator>pkj-m</dc:creator><description>&lt;div&gt;&lt;p&gt;Hey there. Welcome to the first of what is going to be a series of blog posts chronicling my journey as I participate in the Google Summer of Code this year with RADIS (registered as a sub-org under OpenAstronomy). This particular blog post, as the title suggests, is meant to give a quick introduction to GSoC as well as my organization and the project.&lt;/p&gt;

&lt;h4 id="what-is-google-summer-of-code"&gt;What is Google Summer of Code?&lt;/h4&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Borrowing straight from it’s landing page, Google Summer of Code is a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.
In other words, GSoC (as it is more commonly referred to) is a program sponsored by Google which aims to connect university students around the world with open source organizations in order to promote the open-source culture. The students get an opportunity to peek into the world of open source development, learn new skills and also get compensated for the work, quite generously. In turn, the organizations benefit from a few extra pairs of helping hands, using them for a wide array of issues, from refactoring code, to fixing existing bugs, and ofcourse, to add new features to the existing code base. It’s a great program and any college student interested in software development should definitely check it out. The website contains a lot more information &lt;a href="https://summerofcode.withgoogle.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that’s clear, let me talk a little about the specific organization that I will be working with.&lt;/p&gt;

&lt;h4 id="radis--openastronomy"&gt;RADIS ∈ OpenAstronomy&lt;/h4&gt;

&lt;p&gt;While the most commmon way for organizations to participate in the program and request slots for GSoC is to register directly, many organizations, for various reasons, often come together under an umbrella organization and register for GSoC as one single unit. This bundling of organizations can happen on various basis, but the most common reason is that these organizations often work towards the same goal, or operate in the same domain. In my case, this is true as well. I applied for and got selected for GSoC with the OpenAstronomy organization, which as the name suggests is an umbrella organization meant to act as a central hub for all the great number of ‘sub-organizations’ that operate within it. You can read more about OpenAstronomy and what it does &lt;a href="https://openastronomy.org/"&gt;here&lt;/a&gt;. One such sub-organization, with which I shall be working, happens to be RADIS.&lt;/p&gt;

&lt;p&gt;RADIS is a radiation software, a fast line-by-line code for synthesizing and fitting infrared absorption and emission spectra such as encountered in laboratory plasmas or exoplanet atmospheres.&lt;/p&gt;

&lt;p&gt;While RADIS was written with performance in mind, and performance it delivers, it is still limited by factors such as the speed offered by Python, and using a single CPU to carry out all its calculations. While the problem with a programming language can be solved (not so) easily by switching to other languages, such as C++, we’re still limited to using a single processing unit to carry out all the computations. This is the exact problem that my project tries to solve. The title of my project, “Accelerate Synthetic Spectra Calculations using CUDA”, is all about removing the restriction of a single CPU and instead allow RADIS to perform much faster by utilising the power of a GPU instead. I will not be going into the detail of the project here/yet, but the general idea is to switch certain parts of the pipeline in RADIS’ execution which slow it down to the GPU, which as people familiar with GPUs would know, is adept at executing a large volume of simple tasks.&lt;/p&gt;

&lt;p&gt;The technicalities of the project, including how exactly the problem can be shifted to the GPU, how its being implemented on the GPU, or its integration with the RADIS will be discussed in the future blog posts. For now, I will like to keep this blog limited to the things that have already occured, as a part of the ‘Community Bonding Period’:&lt;/p&gt;

&lt;h4 id="the-community-bonding-period"&gt;The Community Bonding Period&lt;/h4&gt;

&lt;p&gt;The Community Bonding Period is an almost 30-days long period meant to serve as a warm-up or a buffer before the actual coding period begins. It can be used for a wide variety of purposes, such as getting a better understanding of the codebase, figuring out the intricacies of your project et al. As such, the greater part of my community bonding period went into understanding the exact details of what I will be doing over the coming months and how I will be doing it. While the pre-selection period did include a fair amount of contributions being made by me towards the organization, it was mainly an attempt to understand the general architecture and codebase of RADIS more thoroughly, and did not involve anything specific to the project I had applied for. Once the selected projects were made public on 4th May 2020, that is when the community bonding period officially started and I started to focus exclusively on my project as well. The seed idea that eventually led to my project started when my mentors decided to play around with the code, and instead of using pure Python for the processing, decided to precompile some of the slower parts of the code into a DLL and imported it to Python instead. The results of this experiment were incredible, and paved the way for my mentor, Dirk van den Bekerom to write the first proof-of-work code demonstrating the use of GPUs to calculate the spectras that were previously being done entirely on the CPU. Benchmarking showed performance boosts of upto 10,000x compared to the naive implementation of spectra calculations on Python and upto 50x from the current implementation of RADIS.&lt;/p&gt;

&lt;p&gt;After discussing with my mentors, the project timeline was decided and the work was done accordingly. Keeping in mind my objectives for the coming month, as a part of the first evaluation, I decided to spend a lot of time on understanding the existing code base of RADIS &lt;em&gt;which focuses on the spectra calculations&lt;/em&gt;. Note that this is completely different from the code that I worked on earlier, which focussed on issues completely different from this, and mostly revolved around the post-processing of spectra instead of calculating it. This included a light reading of the original RADIS paper which talked about the general idea and logic behind RADIS. In addition to that, I also spent time on setting up the right environment for the development work that was to come.
Since the project is about GPUs and CUDA, I had to ensure that CUDA was properly installed and running on my system. While this might seem like a trivial task, it can easily get very messy when working on a linux distribution. Fortunately, I already had a working installation of CUDA on my system so I didn’t have to spend much time on it except for testing and tuning it. Another major issue that this project entailed was the handling of vast amounts of data.&lt;/p&gt;

&lt;p&gt;To keep it simple, in order to calculate the spectra, RADIS requires some data. This data includes information on various parameters such as positions, intensities, air- and self-broadened half-widths, et cetera for different molecules. For my project, for the time being, I was using the CDSD-4000 database, which is a high-temperature databank for CO2 molecule. The major issue this databank presented was the vast size of it. While the complete databank would have been incredibly huge (but fortunately not needed) the portion of the databank that we did focus on was not a small package either, occupying 30GB space unprocessed. Further processing of this data reduced it down to 8GB. While that might seem like a manageable size, the issue was that in order to compute the spectra efficiently and reduce the latency in loading the data, all of it had to be stored on the device RAM. This requirement was simply not possible for me to satisfy with just my personal computer which has a NVidia GTX 1650 with only 4GB of VRAM. Thus, I was left with two options. To either trim the database further and then work on it, or find another machine with specifications high enough to crunch the numbers without trimming it down. After discussing with my mentors and weighing the pros and cons, I decided to try out both.
We used Google Colab with its free GPU access to process the entire 8GB data in one go. The major problem we faced with this method was loading the data onto the colab server. Since even the processed files were 8GB, and Colab did not offer persistent storage, we would have to upload 8GB of data every time we wanted to test the code out, which ofcourse would not have been practical. This was solved by using Google Drive, which can be mounted in colab and work as a persistent storage setup. So far, I have thoroughly enjoyed the convenience and power offered by Colab, and that too for no charge, and hope it continues to perform so wonderfully. In addition, I also trimmed the original database down to smaller sizes and tried to process them on my personal machine, which it did without any hassles.&lt;/p&gt;

&lt;p&gt;Another interesting question that we faced was the tools to use. While it might seem like a no-brainer to use C with CUDA, it unfortunately was not an option as RADIS was written in Python. Therefore, we had to spend a fair amount of time trying to figure out additions to Python in the form of libraries which allow CUDA access. A few of the many different options that are available for such purposes include using Cython, PyCUDA, Cupy, Numba, PyOpenCL and many more. The decision to pick one over the other is a very subjective one, and the answer mostly depends on the kind of application you’re trying to produce. For our particular project, the only requirement was to have access to constant memory on the device which can be achieved using Cython or PyCUDA. While I personally enjoyed PyCUDA due to its extensive documentation and support from NVidia, my mentor seems to prefer Cython so the final decision is still not here!&lt;/p&gt;

&lt;p&gt;Apart from all this, I also spent a good amount of time studying the proof-of-work code that already exists. That included the differences from pure CPU code, the division of work between host and the device, and way the the actual calculations are being done in order to compute the spectra. Finally, I also spent a fair amount of time on revising my CUDA concepts in order to ensure there were no knowledge gaps.&lt;/p&gt;

&lt;p&gt;That pretty much sums up my community bonding period! Over the coming 4 weeks, my objectives include reproducing the proof of work, and figure out the implementation details with my mentors. That will be followed by implementing one of the broadening steps in Python and integrating it with the RADIS.&lt;/p&gt;

&lt;p&gt;I am quite excited about the upcoming months and my journey with RADIS. I believe it will be a great learning experience and I would like to thank Google, OpenAstronomy, RADIS, but most importantly, my incredibly helpful and fun mentors Erwan Pannier, Dirk van den Bekerom and Minesi N for giving me this wonderful opportunity!&lt;/p&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_pkj-m/</guid><pubDate>Sat, 30 May 2020 17:04:56 GMT</pubDate></item><item><title>gsoc_journey = {“Prologue”: [“I have a Dream!!”, “GSoC’2020”]}</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200524_2332_theand9/</link><dc:creator>Amogh Desai</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="Milky way as seen from the earth" src="https://cdn-images-1.medium.com/max/1024/1*8xikLJxwWazkSkLTEmKOFA.jpeg"&gt;&lt;figcaption&gt;&lt;strong&gt;“Curiosity is the essence of our existence”&lt;/strong&gt; ~ Gene Cernan&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Childhood, &lt;/strong&gt;as stated by &lt;a href="https://www.unicef.org/sowc05/english/childhooddefined.html"&gt;UNICEF&lt;/a&gt; is &lt;em&gt;“a time for children to be in school and at play, to grow strong and confident with the love and encouragement of their family and an extended community of caring adults.” &lt;br&gt;
&lt;/em&gt;Thinking about it today, it seems like being connected to a continuous 240 V supply of dreams, curiosity, excitement and innocence.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Encyclopedia — Kingfisher’s Book of the Universe" src="https://cdn-images-1.medium.com/max/289/1*QgW1T6Eenq62-YRAw3ae-g.jpeg"&gt;&lt;figcaption&gt;My favourite encyclopedia. In mint condition after 15 years (Thank you mom for not letting me rip off the outer paper cover 😜)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;One of my dreams was to be an &lt;strong&gt;&lt;em&gt;astronomer&lt;/em&gt;&lt;/strong&gt;. I remember having a lot of encyclopedias on space as a kid(Geek Alert — I have read all my encyclopedias at least 10 times😅 ). I went to NASA once and even built a model telescope (which showed an inverted 20x zoomed image).&lt;br&gt;
&lt;!-- TEASER_END --&gt;
Whenever did an adult ask “&lt;em&gt;beta &lt;/em&gt;what do you want to be when you grow up?” I always replied, &lt;strong&gt;&lt;em&gt;“I want to be an Astronomer!!”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;But the hurdle for realizing my childhood dreams was none other than the &lt;em&gt;Indian Education System&lt;/em&gt;(a story for some other time).&lt;/p&gt;
&lt;p&gt;Back to the present, I am a sophomore pursuing my undergrad in Computer Science with a minor in Artificial Intelligence and Machine Learning(my second favourite area of interest) at Mumbai. &lt;br&gt;
Recently, I stumbled across a term called &lt;strong&gt;Computational Astrophysics, &lt;/strong&gt;which according to &lt;a href="https://www.nature.com/subjects/computational-astrophysics"&gt;Nature.com&lt;/a&gt; is &lt;em&gt;“the study of the phenomena that occur in space using computer simulations. This can involve modelling processes that take place over millions of years, such as colliding galaxies or the slow destruction of a star by a black hole.” &lt;/em&gt;There exists a harmonious amalgamation of &lt;strong&gt;Astrophysics and Computer Science&lt;/strong&gt;(uses ML as well, woohoo!!). I was overjoyed, I felt like I had finally found my calling, life had come around in a full circle.&lt;/p&gt;
&lt;blockquote&gt;“When you have a childhood dream that still burns and tugs at your heart when you’re an adult, you owe it to yourself to pursue and achieve this dream.” — Robert Cheeke&lt;/blockquote&gt;&lt;figure&gt;&lt;img alt="Google Summer of Code 2020" src="https://cdn-images-1.medium.com/max/1024/1*_nxcAB2S0wiyT-KOscvDqA.png"&gt;&lt;figcaption&gt;Viral if you’re reading this. Wouldn’t be inspired to try for GSoC without you. Thanks man!!&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;strong&gt;Google Summer of Code 2020 — My journey&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;2020 brought with it bushfires, riots, plane crashes and the most dreaded COVID-19 &lt;em&gt;Coronavirus&lt;/em&gt;. But COVID-19 turned out to be a blessing in disguise for me!! (more on this later).&lt;/p&gt;
&lt;p&gt;I planned to apply for Google Summer of Code(GSoC; I’m particularly fond of the abbreviation) during my semester break in December. I read about the program, it’s benefits to the Open-Source community, the value it would add to my profile, the unique learning experience it provides, as well as the nitty-gritty of the application process. I won’t lie, it seemed to be pretty intimidating at first, but luckily my seniors who were a part of GSoC’2019 had briefed us about the program(thanks a ton Pujan, Ruturaj, Sahil😁) well in advance.&lt;/p&gt;
&lt;p&gt;First things first, I dual booted Ubuntu on my laptop(best decision ever!!), got familiarized with the basics of GitHub and set up IRC and Slack on my laptop(I was already using Slack for another college club).&lt;br&gt;
Now, with the prerequisites out of the picture, I went through the organizations that had consistently been a part of GSoC for the last 5 years. &lt;br&gt;
My skillset mainly includes Python, Data Science and Machine Learning with some experience in Web Development. I searched for organizations which had projects in Python with some exciting applications. I shortlisted CERN-HSF, OpenAstronomy and INCF. During my break, I contributed to a few repositories by fixing a few bugs, spelling-errors, refactoring code and the like.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;February 18th&lt;/strong&gt;, &lt;strong&gt;2020, &lt;/strong&gt;the date when the student projects were going to be announced came faster than I had anticipated. I followed the same approach as I did in December while shortlisting organizations and topics. In addition to the organizations I had shortlisted in December, I looked for new organizations and topics that interested me. Initially, I had a long list of &lt;em&gt;8 topics&lt;/em&gt;(too many!) which then narrowed down to 5 and then finally 2. &lt;br&gt;
One from CERN-HSF and another from OpenAstronomy for a framework called Stingray. I did not qualify the evaluations for the topic at CERN-HSF(tough luck).&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*UjeIIWLdcqMjsRnoi64EYw.png"&gt;&lt;figcaption&gt;OpenAstronomy and Stingray&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Time passed in a blink, and lo and behold it was the 5th of March, 2020. I had barely made any real progress on the Stingray topic. I was constantly juggling my college work, tests and the GSoC project to no avail. Remember, I had mentioned above that COVID-19 turned out to be a boon in disguise for me? here’s why. &lt;br&gt;
My college was shut by the 12th of March, 2020 due to the fear of COVID-19. The last day of the proposal submission was on the 31st of March, 2020. This meant I had 19 whole days(with continuous college work and lectures 🤦‍♂️) to work on the project and submit my proposal for the topic “&lt;em&gt;A lightning-fast stingray: Parallelizing stingray operations to analyze larger-than-memory datasets”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The task seemed to be daunting but finally after a lot of coffee, monster energy drinks, sleepless nights and an amazing amount of help and support from my mentor &lt;a href="http://www.matteobachetti.it/about"&gt;Mr Matteo Bachetti&lt;/a&gt;(I was stupefied and scared to approach Mr Bachetti initially after reading his credentials, but Matteo you’re an amazing person!! I look up to you) I finally submitted my &lt;a href="https://docs.google.com/document/d/1NGL3jqTCHcQyaWwjmU-zCG5qenZsQGSqlnzNB6UcjpE/edit?usp=sharing"&gt;proposal&lt;/a&gt; on the 28th of March, 2020(phew!). Now came the hardest phase, &lt;strong&gt;&lt;em&gt;waiting for the results&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Chances to get into GSoC’2020. The odds were stacked against me." src="https://cdn-images-1.medium.com/max/1024/1*cJkVm-zJ7_hgi_MJfle8-A.jpeg"&gt;&lt;figcaption&gt;The acceptance rate for GSoC in 2020 was 2.398%&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;37 days, 11 hours, 30 minutes &lt;/strong&gt;later(approx.) at 11:30 pm on the 4th of May, 2020… the Google Summer of Code website &lt;strong&gt;crashed&lt;/strong&gt;🙄. &lt;br&gt;
It was11:33 pm(believe me, every second passes like an eternity) and I hadn’t received an email and the website was still not active. After &lt;em&gt;60 eternities&lt;/em&gt; the website finally loaded. I carefully typed in my email id and password and as I &lt;strong&gt;clicked enter&lt;/strong&gt;(cue the palpitations, dry mouth, fidgety fingers and the tick-tock of an old clock) &lt;strong&gt;Hallelujah!!&lt;/strong&gt; a dashboard with my topic and my name opened. I was overjoyed, ecstatic, elated, thrilled, jubilant, on the seventh heaven; in short, all the synonyms of the word ‘&lt;em&gt;happiness’&lt;/em&gt; couldn’t describe the emotions racing through me at that moment. &lt;strong&gt;I had just got into Google Summer of Code 2020!! &lt;/strong&gt;I was one of &lt;strong&gt;1199 students&lt;/strong&gt; from the 50,000+ who had registered for the program!!!&lt;/p&gt;
&lt;p&gt;This was my first blog for my GSoC series. I will be posting weekly blogs. Please comment and leave a clap if you liked the article. Feel free to reach out to me on &lt;a href="https://www.linkedin.com/in/theand9/"&gt;Linkedin&lt;/a&gt;. Thank you soo much for giving it a read, have an amazing day!! &lt;strong&gt;You are awesome!!!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=c8a7bf0f529d" width="1" height="1"&gt;&lt;/div&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200524_2332_theand9/</guid><pubDate>Sun, 24 May 2020 22:32:49 GMT</pubDate></item><item><title>Tryst with Astronomy and Space Science</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200521_0452_techguybiswa/</link><dc:creator>Biswarup Banerjee</dc:creator><description>&lt;div&gt;&lt;h4&gt;Tryst with Astronomy and Computer science&lt;/h4&gt;&lt;p&gt;When I was very young, my dad used to tell me stories of how people can float in space because of zero gravity, how brave Indian astronauts like Kalpana Chawla gave their life for the pursuit of space science and that the stars we see in the night sky are several light-years away!&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/550/1*eVw2qOKIvYB8HmYgW1-Q2A.png"&gt;&lt;figcaption&gt;My dad telling me stories&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Many a time I would lay down on our open terrace and stare at the never-ending sky filled with millions of stars and just ruminate on the fact that we are living in such a vast universe!&lt;/p&gt;
&lt;p&gt;Then came high school and while randomly browsing the internet I came across a few articles written by Al Globus who happened to be one of the Board of Directors of The National Space Society.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;In the articles, he talked about how humans can live in outer space and how humans will someday become a multi-planet and multi-orbital species.&lt;/p&gt;
&lt;p&gt;I instantly was captivated by the idea of living in space and I spent that year of high school designing a space settlement that could sustain the life of 10,000 residents. I even wrote C++ programs that could help calculate the amount of oxygen, food, water, the surface area, and the radius of the torus needed to sustain a given amount of population.&lt;br&gt;
Eventually, I sent my design to the NASA AMES SPACE SETTLEMENT CONTEST 2015, and our team got an honorable mention!&lt;/p&gt;
&lt;p&gt;The next year, I got an amazing opportunity to work on a collaborative project funded by the US Department of State!&lt;br&gt;
In that project, our team from &lt;a href="https://ncsm.gov.in/"&gt;NCSM India&lt;/a&gt;, and another team from &lt;a href="https://chabotspace.org/"&gt;Chabot Space Science Center, California&lt;/a&gt; worked on designing “space-spin off” technologies that could be used to control pollution levels on earth.&lt;br&gt;
It was really fun and a great learning experience for me and it taught me a lot about collaboration, teamwork, and about how much space science affects our day to day life! &lt;br&gt;
Our project was even featured in many media channels!&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/871/1*15BFL6H9M7WQrWudL7TXtA.png"&gt;&lt;figcaption&gt;India + US team meeting near UC Berkeley.&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="I am with the green Shirt" src="https://cdn-images-1.medium.com/max/543/1*FQaKhO0brsxCm66MNXiVHg.png"&gt;&lt;figcaption&gt;Getting featured in Times Of India&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;After this, I went to college! My college was nothing less than a roller coaster ride!&lt;/p&gt;
&lt;p&gt;So, I dedicated most of my time learning to code, doing internships, traveling to as many hackathons and tech events as possible, and having a good social life!&lt;br&gt;
I worked for some really cool tech startups like&lt;a href="https://pratilipi.com/"&gt; Pratilipi.com&lt;/a&gt; (one of India’s largest vernacular self-publishing platforms), &lt;a href="https://www.upgrad.com/"&gt;upGrad.com&lt;/a&gt; (Linkedin’s top 20 startups 2019–2020) and even went to &lt;a href="https://imaginecup.microsoft.com/en-us/Events?id=0"&gt;Microsoft Imagine Cup’s National Finals&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;And one of the coolest things that happened in my final year of engineering is that I got into Google Summer Of Code 2020 with &lt;/em&gt;&lt;/strong&gt;&lt;a href="https://openastronomy.org/"&gt;&lt;strong&gt;&lt;em&gt;OpenAstronomy.org&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Inside the OpenAstronomy Organization, I would be working with the &lt;a href="https://dirac.astro.washington.edu/"&gt;DIRAC or &lt;em&gt;Data Intensive Research in Astrophysics and Cosmology&lt;/em&gt;&lt;/a&gt; at the University of Washington.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*WAn4V8DHfxMOJSQBLZF-Dg.png"&gt;&lt;figcaption&gt;My Mentors from DIRAC: TOP LEFT: Steven TOP RIGHT: Me (Biswarup) BOTTOM: Professor Mario&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I had multiple team meetings over zoom and I am totally fascinated by the people behind &lt;a href="https://dirac.astro.washington.edu/"&gt;DIRAC&lt;/a&gt;. They are a very experienced and passionate team of astronomers, engineers, and researchers and I feel really lucky to be part of such an amazing group!&lt;/p&gt;
&lt;p&gt;The projects that they work on include building tools and software for analyzing very large data sets (in terabytes and petabytes) coming from &lt;a href="https://www.lsst.org/"&gt;The Large Synoptic Survey Telescope&lt;/a&gt; or the LSST and from the &lt;a href="https://www.ztf.caltech.edu/"&gt;Zwicky Transient Facility (ZTF)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project that I will be working on is a very interesting one and it revolves around building a user interface/dashboard that would allow astronomers/space scientists to easily create and manage Apache Pyspark from their Jupyter Notebooks. With the dashboard, the astronomers would no longer have to write multiple lines of code to launch and manage a pyspark cluster, and instead, they can achieve that by a very user-friendly drag and drop interface!&lt;/p&gt;
&lt;p&gt;In the next 3 months, I will be working with my GSoC mentors &lt;a href="https://depts.washington.edu/astron/profile/stetzler-steven/"&gt;Steven&lt;/a&gt; and &lt;a href="https://dirac.astro.washington.edu/team_member/mario-juric/"&gt;Professor Mario Juric&lt;/a&gt; and the other teammates at DIRAC’s Data Engineering Group, and I am very much excited for the same!&lt;/p&gt;
&lt;p&gt;Linkedin: &lt;a href="https://www.linkedin.com/in/techguybiswa/"&gt;https://www.linkedin.com/in/techguybiswa/&lt;/a&gt;&lt;br&gt;
Mail-Id: bis.banerjee.bb@gamil.com&lt;/p&gt;
&lt;p&gt;Thanks &lt;a href="https://medium.com/u/ffd8efb5df45"&gt;gishtah&lt;/a&gt; for helping me to edit my post!&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=b8df974cb159" width="1" height="1"&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://blog.usejournal.com/tryst-with-astronomy-and-space-science-b8df974cb159"&gt;Tryst with Astronomy and Space Science&lt;/a&gt; was originally published in &lt;a href="https://blog.usejournal.com"&gt;Noteworthy - The Journal Blog&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;&lt;/div&gt;</description><category>astronomy-commons</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200521_0452_techguybiswa/</guid><pubDate>Thu, 21 May 2020 03:52:58 GMT</pubDate></item><item><title>GSoC 2020: The Start of my summer with SunPy</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200519_0513_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="Group of youngsters looking at Planets through Binoculars" src="https://cdn-images-1.medium.com/max/1024/1*KiNZL-dSwxO573jg3EF3Og.jpeg"&gt;&lt;figcaption&gt;Observing Jupiter’s moons and Saturn at 2:00 AM in a pre-Exam hangout with my friends at Campus :)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The time I am writing this, the temperature has already shot up to 45 degree Celsius; clearly, Sun is usually unkind to me in the city of Vadodara, India. Everything was great, I was chilling out at my Campus &lt;a href="http://iitmandi.ac.in"&gt;IIT Mandi&lt;/a&gt; until the Corona thing happened. It changed my google search results for “Corona” from this …&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*3Y4pwOLqZTZfpojp.jpg"&gt;&lt;figcaption&gt;Stellar Corona; Image Source: Wikipedia&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;To this :/&lt;/p&gt;
&lt;figure&gt;&lt;img alt="CoronaVirus Image" src="https://cdn-images-1.medium.com/max/273/1*aWiQ-3qCe-LDecfb7iOtsA.png"&gt;&lt;/figure&gt;&lt;h4&gt;Background&lt;/h4&gt;&lt;p&gt;Going back in time to my school days, I developed a great interest in Astronomy. I enjoyed Planetarium trips, national competitions; even remembering just numerical data about the cosmos! Fast-forwarding a few years, I’m at IIT Mandi completing my bachelor in Computer Science.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;The best thing happened to me at my institute was STAC…&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/538/1*5QVxaKqpE8zu8diAswRskw.png"&gt;&lt;figcaption&gt;STAC’s telescope assembled for Moon observations, place: SAC Terrace, IIT Mandi&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;STAC is&lt;a href="http://stac.iitmandi.co.in"&gt; Space Technology and Astronomy Cell&lt;/a&gt; of IIT Mandi which allowed not only to continue my passion for Astronomy but also to develop interest among my juniors. I was selected as a coordinator of the Club and organized various astronomy sessions as telescope night outs with students of our institute. I got to learn and engage in a lot of astrophysics and python owing to the open-source culture established by our seniors in the STAC and Programming Club of IIT Mandi.&lt;/p&gt;
&lt;p&gt;I actively coordinated in organizing AstraX (the annual Astro-meet) which also witnessed Dr. Stuart Mumord and Dr. Nick Murphy as keynote speakers. I introduced students of a local college with using Python for Astronomy in an event sponsored by Python Software Foundation.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Newspaper cutting, image of students organizing a coding session" src="https://cdn-images-1.medium.com/max/1024/1*kr7WdXYIvAjcV8jCDIGq4Q.png"&gt;&lt;figcaption&gt;Bhavya Bhatt, Tanmay Rustagi and I featured in a local newspaper for organizing a PSF workshop.&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Stepping in the world of Open-Source&lt;/h4&gt;&lt;p&gt;I was introduced to “What is Open-Source?” and “how to use git?” in my first year. I initially started my contributions to &lt;a href="http://github.com/STAC-IITMandi"&gt;STAC Github repositories&lt;/a&gt;. I opened some issues, created silly PRs, and messed up my git history many times while resolving reviews. Looking at those PRs now, I feel grateful to those who patiently reviewed them. I went through many StackOverflow threads to fix my git sins.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Github page for STAC" src="https://cdn-images-1.medium.com/max/999/1*1bgYWGu7_G_pIuBDpFDxMg.png"&gt;&lt;figcaption&gt;STAC on GitHub&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I applied to LSF for GSoC 2019. I lagged in community interaction as I felt shy and started very late. Thus, my proposal wasn’t accepted. I decided to give it a go again in 2020. I started early and joined several chat channels(mostly of organizations under &lt;a href="https://openastronomy.org/"&gt;OpenAstronomy&lt;/a&gt;) for interacting with developers out there.&lt;/p&gt;
&lt;h4&gt;Me and SunPy&lt;/h4&gt;&lt;p&gt;I started with exploring raised issues on the repository and expressed a desire to work on the trivial ones initially. Though I was quite comfortable dealing with conflicts but contributed to a repo with a thorough test-suite for the first time. I was helped a lot by the&lt;a href="http://sunpy.org"&gt; SunPy&lt;/a&gt; community with my PRs and celebrated my first contribution in December of 2019. I owe a lot to the community; being part of them helped to polish my skills and increase my confidence.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1019/1*UA6AADBLzoCBhCDFe5aX6g.png"&gt;&lt;figcaption&gt;My first pull request in SunPy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The `net` submodule was more intriguing for me. I tried to bring back the old client pull requests. After the ideas list was out, I was very excited to work on Fido(Federated Internet Data Obtainer).&lt;/p&gt;
&lt;p&gt;I was also invited to &lt;em&gt;Python in Astronomy&lt;/em&gt; Hack Days that took place in April this year. I worked on adding a `Gong Synoptic Map Client for Fido` with &lt;a href="http://github.com/dstansby"&gt;&lt;strong&gt;&lt;em&gt;David Stansby&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt="Video screenshot of PyAstro HackDay" src="https://cdn-images-1.medium.com/max/1024/1*ccxtL1B6_-3sefvoKdushg.png"&gt;&lt;figcaption&gt;PyAstro conference hackday liverstream screenshot | Solar magnetic field maps for pfsspy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;At 11:00 PM IST on the 4th of May, I received an email from Google. I was going to spend my summer on improving an interface which fetches solar physics data from satellites and observatories!&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jT0kvnSy94TwIw9ewb069g.png"&gt;&lt;figcaption&gt;&lt;a href="https://summerofcode.withgoogle.com/projects/#6648215463526400"&gt;GSoC Project Link&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I had a meeting with my mentors &lt;a href="http://github.com/cadair"&gt;&lt;strong&gt;&lt;em&gt;Stuart Mumford&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt; &lt;/em&gt;&lt;/strong&gt;and &lt;a href="https://github.com/nabobalis"&gt;&lt;strong&gt;&lt;em&gt;Nabil Frei&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;j &lt;/em&gt;&lt;/strong&gt;to formalize the full scope of the project. I feel very fortunate to work with them. I am looking forward to having a great summer ahead in their awesome guidance!&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=d8af558ad399" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200519_0513_abhijeetmanhas/</guid><pubDate>Tue, 19 May 2020 04:13:15 GMT</pubDate></item><item><title>GSoC 2020: Blog 0 - A Brief History...</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200518_2214_jes24/</link><dc:creator>Jyotirmaya Shivottam</dc:creator><description>&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print("Hello, World!")
Hello, World!
&amp;gt;&amp;gt;&amp;gt;
&lt;!-- TEASER_END --&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hi, I am Jyotirmaya Shivottam, a Physics Undergrad at &lt;a href="https://www.niser.ac.in/"&gt;National Institute of Science Education and Research, Bhubaneswar&lt;/a&gt;. I am thrilled to have been selected in Google Summer of Code 2020 to work on implementing a module for Null Geodesics in Kerr and Schwarzschild Spacetimes in &lt;a href="https://einsteinpy.org/"&gt;EinsteinPy&lt;/a&gt; (EPY), under &lt;a href="http://openastronomy.org/"&gt;OpenAstronomy&lt;/a&gt;. This will (tentatively) be an 8-part blog series.&lt;/p&gt;


&lt;h3&gt;
&lt;a href="http://openastronomy.org/Universe_OA/posts/2020/05/20200518_2214_jes24/#a-brief-history-of-my-brush-with-numerical-relativity-and-epy" class="anchor"&gt;
&lt;/a&gt;
A Brief History of my brush with Numerical Relativity and EPY
&lt;/h3&gt;

&lt;p&gt;I had developed an interest in Cosmology and in particular, Einstein's Theory of Relativity, after taking a course in the Special Theory of Relativity, at my university. The course content and presentation intrigued me. So, I decided to read up more on the subject and found the mathematical description of spacetime in General Relativity immensely satisfying. But soon after, it became difficult to visualize the complicated geometries. I am used to understanding things by putting them in code. So naturally, I endeavoured to do the same here. After a brief period of trying and failing to solve it myself, in true programmer fashion, I started looking up software projects that could help me. I was surprised to find that most projects were either in severely outdated &lt;code&gt;FORTRAN77&lt;/code&gt; (yikes!), or in &lt;code&gt;CUDA C&lt;/code&gt;, which gets messy to set up. Then, I found EinsteinPy, which is a python package for Numerical Relativity. Their GitHub Repo had listed an issue quite similar to what I wanted to solve. I also came to know that they were participating in GSoC this year and so, I picked up and solved an issue and opened a PR. Thus began my voyage into the world of Numerical Relativity and Free &amp;amp; Open Source Software.&lt;/p&gt;

&lt;p&gt;But enough about me. Let me introduce you to the project, that I will be spending this summer on.&lt;/p&gt;
&lt;h3&gt;
&lt;a href="http://openastronomy.org/Universe_OA/posts/2020/05/20200518_2214_jes24/#null-geodesics-is-it-another-java-exception-spoiler-alert-no" class="anchor"&gt;
&lt;/a&gt;
Null Geodesics - Is it another Java Exception? (Spoiler Alert: NO!)
&lt;/h3&gt;

&lt;p&gt;As mentioned before, my project is on implementing Null Geodesics in Kerr and Schwarzschild Spacetimes. Geodesics can be understood as a generalization of the concept of shortest paths, between two points, to higher dimensions. In Euclidean or flat geometries, a geodesic is a straight line and in trivial non-Euclidean geometries, like a thin spherical shell, it is an arc of a great circle. Around 115 years ago, Einstein, through his Special Theory of Relativity and then, through its successor, ten years later, the General Theory of Relativity (GR), unified our understanding of space and time into a 3+1-Dimensional &lt;em&gt;spacetime&lt;/em&gt;, where many Euclidean axioms and equations no longer work, partly due to the special behaviour of the time dimension (hence, 3+1D). GR, in particular, sheds a lot of light on the relation between the geometry of spacetime and the distribution of matter in it and how they affect each other. Here, John Archibald Wheeler's famous quote on GR comes to mind:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Spacetime tells matter how to move; matter tells spacetime how to curve".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This correspondence, in mathematical form, is given by Einstein's Field Equations (EFE):&lt;br&gt;


&lt;/p&gt;
&lt;div class="katex-element"&gt;
&lt;span class="katex-display"&gt;&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Rμν−12Rgμν+Λgμν=8πGc4Tμν
\boxed{R_{\mu\nu} - {\tfrac{1}{2}}Rg_{\mu\nu} + \Lambda g_{\mu\nu} = {\frac {8\pi G}{c^{4}}}T_{\mu\nu}}
&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="boxpad"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;R&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mbin"&gt;−&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mtight"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mtight"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;R&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;g&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Λ&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;g&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;c&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mtight"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord mathdefault"&gt;π&lt;/span&gt;&lt;span class="mord mathdefault"&gt;G&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;T&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="stretchy fbox"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;



&lt;p&gt;Where, you can understand the left-hand side as describing the spacetime curvature (geometry), while the right-hand side describes the matter-energy content of the spacetime. A helpful analogue might be Gauss' Divergence Theorem from Electromagnetism:
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;∇V=−ρ/ϵ0\nabla V = -\rho/\epsilon_0 &lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;∇&lt;/span&gt;&lt;span class="mord mathdefault"&gt;V&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;−&lt;/span&gt;&lt;span class="mord mathdefault"&gt;ρ&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;ϵ&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
, where the left-hand side describes the structure of a scalar electric potential field, while the right-hand side describes the charge distribution. The potential field tells charges how to arrange themselves, while charges tell how the potential should vary.&lt;/p&gt;

&lt;p&gt;The equation above is a Tensor Equation, wherein we solve for
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;gμνg_{\mu\nu}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;g&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
, the spacetime Metric Tensor or simply, the Metric.
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;gμνg_{\mu\nu}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;g&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
defines the geometry of the spacetime. The aforementioned Kerr and Schwarzschild Spacetimes are in fact, Kerr and Schwarzschild Metric Tensors. These fall under a special class of EFE solutions, namely "Vacuum Solutions", because they describe a spacetime, devoid of any matter or non-gravitational fields. The Kerr Metric describes the spacetime around an uncharged, rotating, axisymmetric Black Hole, while the Schwarzschild Metric is a particular simplification of Kerr Metric to non-rotating Black Holes.&lt;/p&gt;

&lt;p&gt;Now that we have our spacetime geometry set up, we can think about how the motion of massive objects (read: having non-zero mass, e.g. neutrons) and massless objects, like photons, that make up light, would look like in the spacetime. Here's where, geodesics come in, now in 3+1D. They characterize the paths of such objects, given the metric. The corresponding Geodesic equation can be derived using the metric and the &lt;a href="https://en.wikipedia.org/wiki/Geodesics_in_general_relativity"&gt;Equivalence Principle or through Variational Methods&lt;/a&gt; and is given as:&lt;/p&gt;


&lt;div class="katex-element"&gt;
&lt;span class="katex-display"&gt;&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;d2xμdλ2+Γαβμdxαdλdxβdλ=0
\boxed{
{\mathrm{d}^{2}x^{\mu} \over \mathrm{d}\lambda^{2}} + \Gamma^{\mu}_{\alpha \beta}{\mathrm{d}x^{\alpha} \over \mathrm{d}\lambda}{\mathrm{d}x^{\beta} \over \mathrm{d}\lambda} = 0
}
&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="boxpad"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mtight"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mtight"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;x&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;Γ&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;α&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;β&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;x&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mopen nulldelimiter"&gt;&lt;/span&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathrm"&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;x&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;β&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose nulldelimiter"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="stretchy fbox"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;


&lt;p&gt;Here,
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;xαx^\alpha&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;x&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
is 4-position of the object in motion (Position vector in a 3+1D spacetime),
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Γαβμ\Gamma_{\alpha\beta}^{\mu}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;Γ&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;α&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;β&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
or the Christoffel Symbols are a convenient way of writing metric derivatives (derivatives of
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;gμνg_{\mu\nu}&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathdefault"&gt;g&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;span class="pstrut"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mtight"&gt;&lt;span class="mord mathdefault mtight"&gt;μ&lt;/span&gt;&lt;span class="mord mathdefault mtight"&gt;ν&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
) and
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;λ\lambda&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
is called an Affine Parameter, that is helpful in describing a general geodesic. You might ask, if we are talking about a moving object, why not use time (in particular, "Proper Time",
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Δτ\Delta\tau&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Δ&lt;/span&gt;&lt;span class="mord mathdefault"&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
), instead of some arbitrary
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;λ\lambda&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
parameter. The reason behind this and the importance of this parameter will be apparent soon.&lt;/p&gt;

&lt;p&gt;We have understood, what spacetime and geodesics refer to (even though, we glossed over most details :P), but what are &lt;em&gt;Null Geodesics&lt;/em&gt;? Simply speaking, all massive objects follow time-like geodesics and all massless objects, like light, follow null-like geodesics. Before going into the distinction, we need to know, what "Proper Time" means. Proper Time (
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Δτ\Delta\tau&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Δ&lt;/span&gt;&lt;span class="mord mathdefault"&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
) is the time measured by a clock in an object's rest or proper frame. This is the time physically experienced by the object. Now, the distinction between paths, followed by massive and massless particles, or correspondingly, "time-like" and "null-like" geodesics, arises due to the causal structure of spacetime, in which the constancy of Speed of Light in vacuum plays a major role. Light or massless particles always move at the speed of light, at 299,792,458 m/s. This implies that we cannot construct a reference frame, where a clock is at rest with respect to the photon or massless particle, as no clock can move at that speed. Thus, no proper time ever elapses for light rays or massless particles, i.e.
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Δτ=0\Delta\tau = 0&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Δ&lt;/span&gt;&lt;span class="mord mathdefault"&gt;τ&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
. This is also why, we cannot use
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Δτ\Delta\tau&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Δ&lt;/span&gt;&lt;span class="mord mathdefault"&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
in the geodesic equation to obtain the paths, traced by massless particles. So, we seek another parameterization and that is given by the affine parameter,
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;λ\lambda&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord mathdefault"&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
. Do note that, for massive objects,
&lt;span class="katex-element"&gt;
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;Δτ\Delta\tau&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;Δ&lt;/span&gt;&lt;span class="mord mathdefault"&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
works just fine, as it is well-defined there.&lt;/p&gt;

&lt;p&gt;And so, we have assembled all the parts for getting a basic understanding of "Null Geodesics in Kerr and Schwarzschild Spacetimes". In my GSoC project, I will be implementing a numerical solver for the geodesic equation for null geodesics and I will use the computed geodesics for Radiative Transfer calculations. At the moment, the Community Bonding Period is underway. My mentors and I have set up a weekly meeting schedule, where we brainstorm on the project specifics. An outcome of those meetings is an &lt;a href="https://github.com/einsteinpy/EinsteinPy-EPEs/pull/4"&gt;EPE&lt;/a&gt; (EinsteinPy Proposal for Enhancement), where you can find the details on my proposed implementation and coolest of all, you can help shape the implementation, if you are interested. Isn't open source awesome? (Yes, it is!)&lt;/p&gt;

&lt;h3&gt;
&lt;a href="http://openastronomy.org/Universe_OA/posts/2020/05/20200518_2214_jes24/#what-now" class="anchor"&gt;
&lt;/a&gt;
What now?
&lt;/h3&gt;

&lt;p&gt;I plan to document my progress with the project here, with biweekly blogs. While this blog was physics-heavy, the plan for the next blog is to post a distilled summary of the actual code implementation. Nonetheless, I hope, you found this small introduction into the domain of Relativity interesting. If you wish to play around with some numerical relativity (especially during this pandemic, when most are home and bored), you can try out EinsteinPy. For now, I will leave here with a small tidbit:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you've watched Chris Nolan's brilliant movie, Interstellar, and wanted to simulate and obtain a Black Hole "image" similar to Gargantua, all you would need to solve is the geodesic equation alongside a couple more complicated equations. A brilliant resource to do that is a &lt;a href="http://www.its.caltech.edu/~kip/Interstellar/RayBundleDerive.nb"&gt;Mathematica Notebook&lt;/a&gt;, hosted on Dr. Kip Thorne's personal Caltech homepage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l7V8gtJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rhy8r0ibprwkh8koql4y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l7V8gtJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rhy8r0ibprwkh8koql4y.png" alt="Gargantua, Accreting (from Interstellar)"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>EinsteinPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200518_2214_jes24/</guid><pubDate>Mon, 18 May 2020 21:14:41 GMT</pubDate></item><item><title>Week 0: The first “bug”</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200518_1259_sahilyadav27/</link><dc:creator>Sahil Yadav</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*nlIMK3SPIJkzkJy8W4iukw.png"&gt;&lt;/figure&gt;&lt;p&gt;As a child, I used to try and count the number of stars in the sky, absolutely mesmerised by the twinkling dots. From the long nights on the roof looking above in fascination started the admiration for astronomy.&lt;/p&gt;
&lt;p&gt;As a junior in high school, my older cousin brother introduced me to Machine Learning. Seems weird to say that, but that’s how things panned out. He was working towards his PhD at the time in swarm robotics and gave me a primer of artificial intelligence. Ever since then, I started to read up more on the subject. On reaching college, I pursued a few projects to get a better feeling of academia and the research environment.&lt;/p&gt;
&lt;p&gt;During my sophomore year at BITS, GSoC was recommended to me by many of my seniors as a nice way to work and capitalize the summers. I glanced through the participating organizations and OpenAstronomy caught my attention. Specifically, the CTLearn sub-organization seemed like a match made in heaven, using Machine Learning algorithms for gamma-ray data.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;I quickly introduced myself to the community and went through the codebase. The community was very warm and welcoming. When I was a bit comfortable with the code, a few tasks were put forward, to assess our skills and understanding.&lt;/p&gt;
&lt;p&gt;Navigating through the code and documentation while performing the tasks was a very enthralling experience. I thoroughly enjoyed it and learned a lot in those few weeks. Soon, I created the proposal, made some edits and submitted the application.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/480/1*a8-t18GDsgp-7_B1-wQxLQ.png"&gt;&lt;figcaption&gt;Damian Lillard hitting the game-winner over Paul George, sending the Thunder home. Game 5, Playoffs 2019. Approximately encapsulates how I felt reading the acceptance letter.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;When the acceptance came through I was on cloud nine. Nothing beats that feeling of accomplishment and the urge to perform. I soon contacted my mentor and we discussed out a rough timeline of the project. I was also assigned a few tasks, in order to better align the project’s direction.&lt;/p&gt;
&lt;p&gt;While I slogged of on this assignment, one error kept bugging me. Initially, I was hesitant to ask my mentor for guidance this early on, but I finally gave way and pinged him. He immediately realised that it was in fact a bug in the latest build. So I fixed the bug, which resulted in making the code a bit faster as a consequence. That first merged PR felt nice in the heart, and I know I'm in for an amazing ride ahead.&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=daa0a8b85b7e" width="1" height="1"&gt;&lt;/div&gt;</description><category>CTLearn</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200518_1259_sahilyadav27/</guid><pubDate>Mon, 18 May 2020 11:59:01 GMT</pubDate></item><item><title>GSoC 2020, I am going to an adventure!</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200517_1000_meuge/</link><dc:creator>Meuge</dc:creator><description>&lt;div&gt;&lt;p&gt;Hi, you all! Let me tell you something, this is going to be the beginning of our journey together, we are going on to a spatial adventure! Sit tight, and wait for the countdown!&lt;/p&gt;
&lt;p&gt;&lt;img alt="countdown" src="https://techcrunch.com/wp-content/uploads/2017/08/falcon-9-crs-12-compressor.gif"&gt;&lt;/p&gt;
&lt;p&gt;But first, let me introduce myself, my name is María Eugenia, though everybody knows me as &lt;em&gt;Meuge&lt;/em&gt;. &lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h2&gt;First things first, SPACE? How did we get here?&lt;/h2&gt;
&lt;p&gt;All began with the big bang, no wait, that's a story for another time. All began in 2019, when &lt;strong&gt;JuanLu&lt;/strong&gt; reached out to the &lt;em&gt;The Fellowship of&lt;/em&gt;  ~~the ring~~  &lt;em&gt;Python Científico&lt;/em&gt; community to informed us that &lt;strong&gt;Poliastro&lt;/strong&gt; would be part of &lt;strong&gt;GSoC 2019&lt;/strong&gt;.
To be honest with you, I had just a slight idea of astrodynamics, so I took a big leap of faith and asked JuanLu where I could make myself useful. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Yoda's way" src="https://media1.tenor.com/images/f708e56b6ab99de21228c95203c7af8e/tenor.gif?itemid=13942585"&gt;&lt;/p&gt;
&lt;p&gt;The truth is that JuanLu wasn't that …&lt;/p&gt;&lt;/div&gt;</description><category>poliastro</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200517_1000_meuge/</guid><pubDate>Sun, 17 May 2020 09:00:00 GMT</pubDate></item><item><title>GSoC 2020: glue-solar project 0.1</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200517_0228_kakirastern/</link><dc:creator>Kris Stern</dc:creator><description>&lt;div&gt;&lt;p&gt;I feel grateful for having been selected for the second time in a row to participate in &lt;strong&gt;GSoC&lt;/strong&gt; with the &lt;strong&gt;OpenAstronomy&lt;/strong&gt; organization with &lt;strong&gt;SunPy&lt;/strong&gt; as the sub-organization. My mentors this year are &lt;strong&gt;&lt;em&gt;Thomas Robitaille, Stuart Mumford, and Nabil Freij&lt;/em&gt;&lt;/strong&gt;, whom I have come to know within the astrophysics community over the past year or so and have come to respect. I am definitely looking forward to having a summer of serious fun with glue (or glueviz) in order to develop a plugin called glue-solar for use in solar physics data visualization. But to start I simply cannot resist delving more deeply into the glue-solar project. First off, here is a &lt;a href="https://summerofcode.withgoogle.com/projects/#5824429948403712"&gt;link&lt;/a&gt; to my project description over at GSoC’s official website.&lt;/p&gt;
&lt;p&gt;To introduce the glue-solar plugin, it is only natural to first introduce the glue package for which it operates on. As its official &lt;a href="http://glueviz.org/"&gt;website&lt;/a&gt; would suggest, glue is a package for multi-dimensional linked-data exploration. With glue, users can generate scatter plots, histograms, and both 2D and 3D images of their own data. The package emphasizes on the brushing and linking paradigm, where selections in any graph can propagate to all others. Moreover, glue uses the existing logical links between different data sets to overlay visualizations of different datasets, and to propagate the same selections across all other data sets. To clarify, these can be spatial and temporal links. These links are specified by the user, and are designed to be arbitrarily flexible. Finally, glue is written in Python, and built on top of its standard scientific libraries (e.g., Numpy, Matplotlib, Scipy), such that users can easily integrate their own python code for data input, cleaning, and analysis, enabling full scripting capability.&lt;/p&gt;
&lt;iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FqO3RQiRjWA4%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DqO3RQiRjWA4&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FqO3RQiRjWA4%2Fhqdefault.jpg&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="640" height="480" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/c5d030f496449b3a2e665643fa02682e/href"&gt;https://medium.com/media/c5d030f496449b3a2e665643fa02682e/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;Back to the glue-solar project, it is to provide a foundation for interactively exploring and quickly analyzing large datasets (100Gb or larger) in solar physics to be built in Python. This software will enable multi-instrument interactive visualisation as a &lt;strong&gt;plugin&lt;/strong&gt; of glue. While a fully featured GUI toolkit for solar data is not expected to be built in one summer due to time constraint, the goal is to provide the technical building blocks, but more importantly to demonstrate, and document, how this framework can be used by various instrument teams to build custom solutions for their solar data. Glue-solar, like glue is completely free for anyone to use and is open-source. Furthermore, glue-solar is a collaboration between glue and SunPy, hence its focus on solar physics.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;The official start date of this year’s GSoC is June 2nd, 2020, immediately after the current community bonding period. But work has already begun and we have already opened pull requests (or PRs) at both the glue and glue-solar repos to enable loading of basic SunPy maps such as AIA and HMI data so that they can be overplotted as different colormaps. As per usual, GSoC will last for about three months, until August 25th, 2020. This summer is surely going to be filled with many fun hours of coding for both glue and glue-solar for me. I am definitely looking forward to enjoying working on my last GSoC project this year, with my amazing mentors’ guidance.&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=aae452de5e9" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200517_0228_kakirastern/</guid><pubDate>Sun, 17 May 2020 01:28:15 GMT</pubDate></item><item><title>Google Summer of Code - Blog #0!</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200514_1804_pkj-m/</link><dc:creator>pkj-m</dc:creator><description>&lt;div&gt;&lt;p&gt;Hey there. Welcome to my first blog of an upcoming series of blogs where I will be trying to chronicle my journey this year as an open source contributor to RADIS under the Google Summer of Code program!&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;-p&lt;/p&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200514_1804_pkj-m/</guid><pubDate>Thu, 14 May 2020 17:04:56 GMT</pubDate></item></channel></rss>