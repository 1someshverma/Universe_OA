<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts about JuliaAstro)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/categories/juliaastro.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 25 Jun 2020 01:30:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Week 1 &amp; 2: Coding Officially Begins!</title><link>http://openastronomy.org/Universe_OA/posts/2020/06/20200615_1804_siddharthlal25/</link><dc:creator>siddharthlal25</dc:creator><description>&lt;div&gt;&lt;h3 id="hey-sid-did-the-coding-period-officially-begin"&gt;&lt;em&gt;Hey Sid, did the coding period officially begin?&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;The community bonding period ended by the end of last month and the coding period officially began, I started to work on basic structure of the package and setting up the (not so user-friendly, PS: from astronomer’s perspective) interface for the image reduction methods.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h3 id="hey-what-did-you-build-in-these-two-weeks"&gt;&lt;em&gt;Hey, what did you build in these two weeks?&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;I have set up the basic methods required for processing of astronomical images, let me explain it to you one by one:&lt;/p&gt;

&lt;p&gt;The first method implemented was &lt;code class="language-plaintext highlighter-rouge"&gt;subtract_bias&lt;/code&gt;, this de-biases the image with the help of a bias frame, it has a mutating version as well which de-biases the image in place.&lt;/p&gt;

&lt;p&gt;Next comes &lt;code class="language-plaintext highlighter-rouge"&gt;subtract_overscan&lt;/code&gt;, every CCD plate has some region which is unexposed to light and this is called overscan region. For pre-processing average of this region has to be obtained (there are models as well, that can fit into this region PS: model part has to be implemented later) and then subtracted from the whole image. It also has a mutating variant clubbed together.&lt;/p&gt;

&lt;p&gt;Next in line was &lt;code class="language-plaintext highlighter-rouge"&gt;flat_correct&lt;/code&gt;, this method removes the effect of variations in pixel to pixel sensitivity of detectors and by distortions in the optical path. The interesting point I learned while implementing this is fused broadcasting, believe me Julia keeps on blowing my mind with its speed and succinct syntaxes.&lt;/p&gt;

&lt;p&gt;Next, I implemented some basic functionalities for modifying the image sizes i.e. &lt;code class="language-plaintext highlighter-rouge"&gt;trim&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;crop&lt;/code&gt;. They are not much different but they are different, let me explain! Trimming is instructing the computer to remove some parts from the image, whereas cropping is instructing the computer to keep a certain part in the image (Yes, that’s the difference!). Sound’s pretty similar, right? The implementations were not that similar, &lt;code class="language-plaintext highlighter-rouge"&gt;crop&lt;/code&gt; was a bit tricky as compared to &lt;code class="language-plaintext highlighter-rouge"&gt;trim&lt;/code&gt; (check out the source code to find the difference). These functions are inherently non-mutating type, but I have also implemented a version of &lt;code class="language-plaintext highlighter-rouge"&gt;crop&lt;/code&gt; as &lt;code class="language-plaintext highlighter-rouge"&gt;cropview&lt;/code&gt;, this returns the &lt;code class="language-plaintext highlighter-rouge"&gt;view&lt;/code&gt; of the passed array. Mutating the &lt;code class="language-plaintext highlighter-rouge"&gt;view&lt;/code&gt; will mutate the initial frame passed, an analogous version for &lt;code class="language-plaintext highlighter-rouge"&gt;trim&lt;/code&gt; here is &lt;code class="language-plaintext highlighter-rouge"&gt;trimview&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next in line was the function &lt;code class="language-plaintext highlighter-rouge"&gt;combine&lt;/code&gt;, it basically takes a variable number of frames, stacks them together, and then finally combines them using medians (users can also have their custom combining functions).&lt;/p&gt;

&lt;p&gt;Okay, this one is last, &lt;code class="language-plaintext highlighter-rouge"&gt;subtract_dark&lt;/code&gt;, a way to reduce image noise in photographs shot with long exposure times, at high ISO sensor sensitivity, or at high temperatures. It takes advantage of the fact that two components of image noise, dark current and fixed-pattern noise, are the same from shot to shot. This function also has a mutating version clubbed along with it.&lt;/p&gt;

&lt;h3 id="hmmm-interesting-whats-next"&gt;&lt;em&gt;Hmmm, interesting… What’s next?&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Wait, it’s not yet over! I have also implemented these functions to interface directly with &lt;code class="language-plaintext highlighter-rouge"&gt;FITS&lt;/code&gt; files and &lt;code class="language-plaintext highlighter-rouge"&gt;ImageHDU&lt;/code&gt; (an element of the &lt;code class="language-plaintext highlighter-rouge"&gt;FITS&lt;/code&gt; files), putting it simply, a user can load the data (stored in &lt;code class="language-plaintext highlighter-rouge"&gt;FITS&lt;/code&gt; format) directly from the disk and then can play with all these functions!&lt;/p&gt;

&lt;h3 id="okay-cool-so-whats-next-do-you-still-have-something-in-the-pipeline"&gt;&lt;em&gt;Okay, cool! So what’s next? Do you still have something in the pipeline?&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Yes, the combine function still needs to be interfaced with &lt;code class="language-plaintext highlighter-rouge"&gt;FITS&lt;/code&gt; files, and once done, I will go for a release of the package. The next steps would be user-friendly processing pipelines, iterator reductions, and lot’s of documentation to be packed up together with the package.&lt;/p&gt;

&lt;p&gt;Stay tuned to know more!&lt;/p&gt;

&lt;p&gt;-sl&lt;/p&gt;&lt;/div&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2020/06/20200615_1804_siddharthlal25/</guid><pubDate>Mon, 15 Jun 2020 17:04:56 GMT</pubDate></item><item><title>Community Bonding Period-GSoC20</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_siddharthlal25/</link><dc:creator>siddharthlal25</dc:creator><description>&lt;div&gt;&lt;p&gt;It was around 11:30 in the night on 4th of May, the Google servers glitched for a second or so but then I could see my project on the Org’s list.&lt;/p&gt;

&lt;p&gt;Finally, I got selected for GSoC 2020 after around two months of involvement with the JuliaAstro community. Before my selection, I had primarily contributed to &lt;a href="https://github.com/JuliaAstro/Photometry.jl"&gt;Photometry.jl&lt;/a&gt; and &lt;a href="https://github.com/JuliaAstro/DustExtinction.jl"&gt;DustExtinction.jl&lt;/a&gt;, both were a part of the JuliaAstro community!&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;The next step was the community bonding phase, in this phase, I got my development setup more robust (I updated my OS, updated Atom, and also Juno). I also sharpened my Julia skills and learned the art of succinct documentation in this period. I went through the codebase of the repositories available in this community to get a flavor of Julia and it’s usage for making things work!&lt;/p&gt;

&lt;p&gt;Since I was under lockdown back in my hometown, I got quite bored and decided to start contributing towards the project. I set up the basic framework of the package and added a few basic skeletal functions after discussions about it with the mentors.&lt;/p&gt;

&lt;p&gt;At last, I would like to thank Miles, Mosè, and Yash for their guidance and prompt responses to all my dumb queries, it wouldn’t have been possible for me to start contributing without their guidance and help. A big shout-out to you guys! Thank you so much!&lt;/p&gt;

&lt;p&gt;Oh! I forget to mention my project, this summers I will be developing a package for reduction of astronomical images in Julia.&lt;/p&gt;

&lt;p&gt;Stay tuned for my upcoming blogs to know more about the project!&lt;/p&gt;

&lt;p&gt;-sl&lt;/p&gt;&lt;/div&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200530_1804_siddharthlal25/</guid><pubDate>Sat, 30 May 2020 17:04:56 GMT</pubDate></item><item><title>The story behing GSoC!</title><link>http://openastronomy.org/Universe_OA/posts/2020/05/20200514_1804_siddharthlal25/</link><dc:creator>siddharthlal25</dc:creator><description>&lt;div&gt;&lt;p&gt;Hola amigos! Welcome to my first blog of an upcoming series of blogs where I will be trying to chronicle my journey this year as an open source contributor to JuliaAstro under the Google Summer of Code program!&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;-sl&lt;/p&gt;&lt;/div&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2020/05/20200514_1804_siddharthlal25/</guid><pubDate>Thu, 14 May 2020 17:04:56 GMT</pubDate></item><item><title>Final Report GSoC'19: The curtain Falls</title><link>http://openastronomy.org/Universe_OA/posts/2019/08/20190823_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;With over 2K+ lines of code, 3 repositories and countless discussions, Google Summer of Code 19 with OpenAstronomy (JuliaAstro) came to an end. The following is an attempt to summarize it in words (without the hard parts).
Merged Pull Requests Reproject.jl: SLOC -&amp;gt; 586
(Reprojects (a type of image c &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-08/final-report-gsoc19-the-curtain-falls/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/08/20190823_0000_aquatiko/</guid><pubDate>Thu, 22 Aug 2019 23:00:00 GMT</pubDate></item><item><title>Week 9-10 at JuliaAstro</title><link>http://openastronomy.org/Universe_OA/posts/2019/08/20190810_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;dl&gt;
&lt;dt&gt;List of Milestones achieved  Interpolator tweak #6&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Multi File Support #21
ccd2rbg function #15
data matrix and WCSTransform tuple type parser #7
Support for RGB #22
Basic UI panel for AstroImages #3&lt;/p&gt;
&lt;div class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;span class="docutils literal"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;, line 7)&lt;/p&gt;
&lt;p&gt;Unexpected indentation.&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Interpolator tweak #6 This patch to Reproject.jl was due to some realizations I had upon Mosè  &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-08/week-9-10-at-juliaastro/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/dd&gt;
&lt;/dl&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/08/20190810_0000_aquatiko/</guid><pubDate>Fri, 09 Aug 2019 23:00:00 GMT</pubDate></item><item><title>Second Evaluation: 2 months into GSoC</title><link>http://openastronomy.org/Universe_OA/posts/2019/07/20190723_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;I thought the first month will be the toughest as there lies the trickiest part of the project. But guess what, the second month proved otherwise. But that’s the reality of GSoC, right?
Until you have faced the challenges at least once, you won’t grow better to face it the next time. I am glad of th &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-07/second-evaluation-2-months-into-gsoc/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/07/20190723_0000_aquatiko/</guid><pubDate>Mon, 22 Jul 2019 23:00:00 GMT</pubDate></item><item><title>Week 5-6 at JuliaAstro</title><link>http://openastronomy.org/Universe_OA/posts/2019/07/20190710_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;List of Milestones achieved  Integrated WCS info. with AstroImages Plots #16 Registered the very first version of Reproject.jl #1643 Added Multi Image support to AstroImages #19 Added Multi WCS support to AstroImages #20  Plots and WCS info. Integration This involved writing a custom recipe for plot &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-07/week-5-6-at-juliaastro/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/07/20190710_0000_aquatiko/</guid><pubDate>Tue, 09 Jul 2019 23:00:00 GMT</pubDate></item><item><title>First Evaluation: 1 months into GSoC</title><link>http://openastronomy.org/Universe_OA/posts/2019/06/20190626_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;This month went by faster than I expected. Why? It’s because I had too much to do and I was excited enough to write the code and see how things will turn out. Will my ideas to create things in a certain way reflect in my code or not? What would I do if I spent too much time working on the wrong appr &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-06/first-evaluation-1-months-into-gsoc/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/06/20190626_0000_aquatiko/</guid><pubDate>Tue, 25 Jun 2019 23:00:00 GMT</pubDate></item><item><title>2 weeks into GSoC</title><link>http://openastronomy.org/Universe_OA/posts/2019/06/20190612_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;I had a feeling in the community bonding period that something will mess up at the start of the coding period as I had the toughest part lined at the start. The same did happen… At the start, I had two weeks for porting reproject from Astropy. In short what it does is, it align two different astrono &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-06/2-weeks-into-gsoc/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/06/20190612_0000_aquatiko/</guid><pubDate>Tue, 11 Jun 2019 23:00:00 GMT</pubDate></item><item><title>Community Bonding Period: JuliaAstro</title><link>http://openastronomy.org/Universe_OA/posts/2019/05/20190527_0000_aquatiko/</link><dc:creator>aquatiko</dc:creator><description>&lt;p&gt;Why this Community Bonding Period(CBP)? According to Google,
“The community bonding period is when you work out further details of your project plan, schedule regular upcoming meetings with your mentor, get your development environment set up and start to engage with the project’s open source commun &lt;a class="reference external" href="https://aquatiko.github.io/blog/2019-05/community-bonding-period-juliaastro/"&gt;...READ MORE...&lt;/a&gt;&lt;/p&gt;</description><category>JuliaAstro</category><guid>http://openastronomy.org/Universe_OA/posts/2019/05/20190527_0000_aquatiko/</guid><pubDate>Sun, 26 May 2019 23:00:00 GMT</pubDate></item></channel></rss>