<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts about SunPy)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/categories/sunpy.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 23 May 2021 04:17:37 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Final Chapter: The Road Goes Ever On</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200828_1223_raahul-singh/</link><dc:creator>Raahul Singh</dc:creator><description>&lt;div&gt;&lt;h5&gt;The Autumn of my GSoC project.&lt;/h5&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/810/1*9YtpATtGuoLUSIEOasTixQ.jpeg"&gt;&lt;figcaption&gt;The Doon Valley, my home.&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;“Roads go ever ever on,&lt;br&gt;
Over rock and under tree,&lt;br&gt;
By caves where never sun has shone,&lt;br&gt;
&lt;!-- TEASER_END --&gt;
By streams that never find the sea;&lt;br&gt;
Over snow by winter sown,&lt;br&gt;
And through the merry flowers of June,&lt;br&gt;
Over grass and over stone,&lt;br&gt;
And under mountains in the moon.”&lt;/blockquote&gt;&lt;blockquote&gt;~ The Hobbit, J.R.R. Tolkien&lt;/blockquote&gt;&lt;p&gt;When I first read the Hobbit, I always wondered what going on an adventure would feel like.&lt;br&gt;
Would I be fighting goblins, striding through enchanted forests with wizards?&lt;br&gt;
Would there be a treasure? Would there be a Dragon? &lt;br&gt;
And as I grew older, would or could there be a happy ending?&lt;/p&gt;
&lt;p&gt;Well, an adventure it indeed was.&lt;br&gt;
Building a domain specific Deep Learning Toolkit, learning about packaging, testing, and the best practices, all to just set the package up!&lt;/p&gt;
&lt;p&gt;I did fight goblins that were the bugs in my PyTorch pipelines. Those NaNs, oh those pesky NaNs! They really were like goblins that popped up in the input data when I least expected them.&lt;br&gt;
Though I did enlist the help of my wizard mentors, &lt;a href="https://github.com/dpshelio"&gt;David&lt;/a&gt;, &lt;a href="https://github.com/drsophiemurray"&gt;Sophie&lt;/a&gt;, and &lt;a href="https://github.com/mbobra"&gt;Monica,&lt;/a&gt; and together we marched through the enchanted (or were they cursed?) forests of SWPC and HEK to get the data we wanted.&lt;/p&gt;
&lt;p&gt;It was a fascinating experience. One that I will cherish forever.&lt;br&gt;
I wish I could extend this summer, but my time is up, and all our goals for this project have been completed.&lt;/p&gt;
&lt;p&gt;After all, all adventures must come to an end.&lt;/p&gt;
&lt;blockquote&gt;“The Road goes ever on and on &lt;br&gt;
Out from the door where it began.&lt;br&gt;
Now far ahead the Road has gone,&lt;br&gt;
Let others follow it who can!&lt;br&gt;
Let them a journey new begin,&lt;br&gt;
But I at last with weary feet&lt;br&gt;
Will turn towards the lighted inn,&lt;br&gt;
My evening-rest and sleep to meet”&lt;/blockquote&gt;&lt;p&gt;And so we come to the end of my GSoC journey, let’s talk about the treasure!&lt;/p&gt;
&lt;h4&gt;The Treasure&lt;/h4&gt;&lt;h5&gt;1 ) The Search Events Object&lt;/h5&gt;&lt;p&gt;Often we find data representing the same observed physical phenomenon to have slightly different values when the data comes from different sources.&lt;br&gt;
This could be due to noise or different choices of parameters for the preprocessing techniques employed.&lt;br&gt;
This creates problems when the two datasets need to be compared, and /or may data exclusive to them.&lt;br&gt;
We faced this problem when the data from NOAA that characterizes the Active Regions was not available in the Sunspotter dataset.&lt;br&gt;
Although the observations were identical, they were not exact. &lt;br&gt;
Their multidimensional nature also prevented matching by simple sorting.&lt;/p&gt;
&lt;p&gt;In my repository, &lt;a href="https://github.com/Raahul-Singh/pythia"&gt;Pythia,&lt;/a&gt; we created a general Search Events Table Matching algorithm that would solve this problem.&lt;br&gt;
Although it is general enough to be used with any tabular dataset, we do plan on making it more ‘intelligent’ so as to require minimal preprocessing from the user.&lt;/p&gt;
&lt;h5&gt;&lt;strong&gt;2) The Flare Forecasting&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;After significant preprocessing, we were able to get a good enough dataset to feed to our deep learning pipeline. &lt;br&gt;
We wanted to predict if an Active Region would flare in the first six hours from its observation or not.&lt;br&gt;
We were inspired by architectures, popular in academia in the domain of flare forecasting, Though our approach was the first to combine modern Deep Learning techniques for building our Convolutional Nets.&lt;/p&gt;
&lt;p&gt;With some PyTorch magic, we were able to get a prediction accuracy of around 84% on the test set in the binary classification of whether an active region would flare or not. A study of flare forecasting using Machine learning in a fixed time frame from observation is unique in itself.&lt;/p&gt;
&lt;p&gt;We implemented an Autoencoder to get a low dimensional representation of the Active Regions, so that they may be used with other scalar measurements.&lt;/p&gt;
&lt;p&gt;We also were curious to see if the absolute orientation of the Active regions with respect to the sun was of any significance in the Active Region’s flaring activity.&lt;br&gt;
While we were expecting a connection, we were surprised to see that the orientation mattered more in the case where the Active Region did flare than in the case where it did not. More work is required before we can quantitatively state our findings on this front.&lt;/p&gt;
&lt;h5&gt;3) &lt;a href="https://github.com/Raahul-Singh/pythia"&gt;Pythia&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;What began as a project to analyze the Sunspotter dataset, has grown way beyond its original scope.&lt;br&gt;
With the power of Pytorch Lightning and SunPy, Pythia is shaping out be a general-purpose Deep learning Toolkit for Solar Physics.&lt;/p&gt;
&lt;p&gt;The barrier to entry for using Deep Learning in Solar Physics Research is quite high for people without the technical knowledge of Deep Learning and without the time to invest heavily into learning the many nuances of modern Deep Learning frameworks.&lt;/p&gt;
&lt;p&gt;With Pythia, we plan on providing a SciKit Learn like interface, with the power and muscle of PyTorch and the elegance and order of Pytorch Lightning.&lt;br&gt;
Although the expansion and generalization are still underway, with more use cases and help from the community, Pythia will surely help in making modern Deep Learning more accessible to the Solar Physics community.&lt;/p&gt;
&lt;h4&gt;The Dragon&lt;/h4&gt;&lt;blockquote&gt;“Roads go ever ever on&lt;br&gt;
Under cloud and under star,&lt;br&gt;
Yet feet that wandering have gone&lt;br&gt;
Turn at last to home afar.&lt;br&gt;
Eyes that fire and sword have seen&lt;br&gt;
And horror in the halls of stone&lt;br&gt;
Look at last on meadows green&lt;br&gt;
And trees and hills they long have known.”&lt;/blockquote&gt;&lt;p&gt;Unlike Bilbo, my Dragon isn’t evil like Smaug. &lt;br&gt;
It isn’t greedy of gold, nor too large or too scary.&lt;br&gt;
It tells me it prefers gardening over desolating lands as a hobby. &lt;br&gt;
And has so far been fairly consistent in his participation in our friendship.&lt;/p&gt;
&lt;p&gt;A little secret that not many know is that my dragon doesn’t have a physical existence.&lt;br&gt;
I confide in my reader and trust them to keep this secret, a secret.&lt;/p&gt;
&lt;p&gt;The Dragon I am talking about, of course, is this newfound sense of spirit and the freedom that I have acquired over this summer.&lt;/p&gt;
&lt;p&gt;This summer has been magical for me.&lt;/p&gt;
&lt;p&gt;This summer, I worked on what I would call a dream project, using AI in Natural Sciences.&lt;br&gt;
I interacted with scientists from NASA, UCL, Trinity, etc., all of whom are heroes to me.&lt;/p&gt;
&lt;p&gt;I co-founded an Open Source organization, &lt;a href="https://github.com/wildfirepy"&gt;The WildfirePy Project,&lt;/a&gt; for doing my part in studying, understanding, and preventing wildfires.&lt;/p&gt;
&lt;p&gt;And finally, I got my first job! Becoming financially independent, and working on projects that make a difference!&lt;/p&gt;
&lt;p&gt;Even in my wildest dreams, I never imagined such fortune and serendipity.&lt;br&gt;
In all honesty, I’m not sure if the Dragon will stay, or fly away.&lt;br&gt;
I am yet to start counting on it for its company when I need it.&lt;/p&gt;
&lt;p&gt;But I hope it stays. :)&lt;/p&gt;
&lt;p&gt;GSoC and Open Source in general, have been life-changing for me.&lt;br&gt;
More than anything, it has given me a way to express myself, my love for science, my love for code and my desire to be part of something bigger than myself.&lt;br&gt;
And act on it.&lt;br&gt;
Open source is nourishment to my soul, and I shall forever be grateful to Google Summer of Code for helping me get started with it.&lt;/p&gt;
&lt;p&gt;And to SunPy for making my life more luminous!&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Happy Ending?&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;“The Road goes ever on and on&lt;br&gt;
Down from the door where it began.&lt;br&gt;
Now far ahead the Road has gone,&lt;br&gt;
And I must follow, if I can,&lt;br&gt;
Pursuing it with eager feet,&lt;br&gt;
Until it joins some larger way&lt;br&gt;
Where many paths and errands meet.&lt;br&gt;
And whither then? I cannot say.”&lt;/blockquote&gt;&lt;p&gt;Happy Ending? &lt;br&gt;
Well, I wouldn’t know.&lt;br&gt;
I am just getting started!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;:)&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=53fb35e650f4" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200828_1223_raahul-singh/</guid><pubDate>Fri, 28 Aug 2020 11:23:27 GMT</pubDate></item><item><title>GSoC 2020: Thus Ending</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_2118_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/680/0*NtL-M7ydCU35SOqY.jpg"&gt;&lt;/figure&gt;&lt;p&gt;This post marks the end of the summer of Code with Google. A lot I learned from the community; a lot I contributed to it. What I took back from GSoC is way more than what I put forward for it. So let’s see what I did in the last weeks.&lt;/p&gt;
&lt;p&gt;I have now added a guide on how to Add “Attrs” to the registry in &lt;a href="https://github.com/sunpy/sunpy/pull/4387"&gt;PR #4387&lt;/a&gt;. It is part of the developer guide for Fido.&lt;br&gt;
I have added tests to check metadata queries in &lt;a href="https://github.com/sunpy/sunpy/pull/4385"&gt;#4385&lt;/a&gt; and ways to index the results using the client’s name. It eases to retrieve individual provider responses from a Fido result.&lt;br&gt;
&lt;!-- TEASER_END --&gt;
I resolved all reviews so far on PR &lt;a href="https://github.com/sunpy/sunpy/pull/4419"&gt;#4419&lt;/a&gt;, so now it will ease the merging of &lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;PR #4321&lt;/a&gt;.&lt;br&gt;
They await review as of now, maybe merged within this week. In short, almost all the proposed goals were achieved in the project. I experienced a more “pythonic” way of coding. Discovered new heights of the language, learned some solar physics, and what matters most, became part of a great community. Hopefully I made &lt;em&gt;Fido Great Again!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAPRE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=acd30ed987ae" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_2118_abhijeetmanhas/</guid><pubDate>Tue, 25 Aug 2020 20:18:36 GMT</pubDate></item><item><title>Season Finale!</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_1908_raahul-singh/</link><dc:creator>Raahul Singh</dc:creator><description>&lt;span&gt;&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=99bc18aedadc" width="1" height="1"&gt;
&lt;!-- TEASER_END --&gt;&lt;/span&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200825_1908_raahul-singh/</guid><pubDate>Tue, 25 Aug 2020 18:08:08 GMT</pubDate></item><item><title>GSoC 2020: glue-solar project 3.2</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200823_0807_kakirastern/</link><dc:creator>Kris Stern</dc:creator><description>&lt;div&gt;&lt;p&gt;It is finally nearing the end of the project for me, as far as coding is concerned. Over the past few weeks I have spent some time on some last-ditch effort to debug with my mentors and to squeeze as much as I possibly could given the time constraint I have been under. These include but not limited to sorting out some generalisation issues that previously prevented glue &lt;a href="https://github.com/glue-viz/glue/pull/2167"&gt;PR #2167&lt;/a&gt; from being usable for general FITS files, some type as well as wcs linkages issues in glue &lt;a href="https://github.com/glue-viz/glue/pull/2161"&gt;PR #2161&lt;/a&gt; that cropped up after applying changes suggested in code review that have not been properly checked on my part. The pull requests started or completed for the project include but are not limited to the following list:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;glue &lt;a href="https://github.com/glue-viz/glue/pull/2167"&gt;PR #2167&lt;/a&gt; for updating 1D Profile viewer to use wcsaxes for plotting and add sliders&lt;/li&gt;&lt;li&gt;glue &lt;a href="https://github.com/glue-viz/glue/pull/2161"&gt;PR #2161&lt;/a&gt; for updating ‘wcs_autolinking’ code to handle N-D cases using a generalised approach conforming to &lt;a href="https://docs.astropy.org/en/stable/wcs/wcsapi.html"&gt;APE 14: Shared Python interface for World Coordinate Systems&lt;/a&gt;&lt;/li&gt;&lt;li&gt;glue &lt;a href="https://github.com/glue-viz/glue/pull/2164"&gt;PR #2164&lt;/a&gt; for adding support to NDData for astropy package&lt;/li&gt;&lt;li&gt;glue &lt;a href="https://github.com/glue-viz/glue/pull/2131"&gt;PR #2131&lt;/a&gt; for adding a preferred_cmap attribute to introduce a color coding scheme for different glue-solar data types (for example to distinguish the IRIS raster data cubes from its companion IRIS SJI data cubes&lt;/li&gt;&lt;li&gt;glue-solar &lt;a href="https://github.com/glue-viz/glue-solar/pull/15"&gt;PR #15&lt;/a&gt; for adding to open with “SunPy Map” GUI option&lt;/li&gt;&lt;li&gt;glue-solar &lt;a href="https://github.com/glue-viz/glue-solar/pull/17"&gt;PR #17&lt;/a&gt; for adding “Loading and Overplotting AIA and HMI files as SunPy Maps” docs as a user guide&lt;/li&gt;&lt;li&gt;glue-solar &lt;a href="https://github.com/glue-viz/glue-solar/pull/18"&gt;PR #18&lt;/a&gt; for adding “loading IRIS level 2 raster and sji data together docs” as a user guide&lt;/li&gt;&lt;li&gt;glue-solar &lt;a href="https://github.com/glue-viz/glue-solar/pull/23"&gt;PR #23&lt;/a&gt; for updating IRIS data labels with OBSIDs for filtering&lt;/li&gt;&lt;li&gt;glue-solar &lt;a href="https://github.com/glue-viz/glue-solar/pull/28"&gt;PR #28&lt;/a&gt;, &lt;a href="https://github.com/glue-viz/glue-solar/pull/29"&gt;PR #29&lt;/a&gt; as core glue-solar documentation&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;I have actually been using our work on the glue 1D profile tool for my current doctoral studies on studies of planetary nebulae using integral field spectroscopy (IFS) involving the handling of a large number of data cubes from some Australian telescopes (data collected by my PhD supervisor Prof. Quentin Parker). Turned out this tool made the process of investigating the different spectra, which could run up to hundreds in number per data cube or observation, as it allows me to load in my data cube only once, and then to inspect the variation across spatial dimensions to see if the signal-to-noise of a particular observation is too high, or if the opposite is true so that the spectra will then be further processed into full-optical integrated spectra with flux calibration or de-reddening as necessary.&lt;/p&gt;
&lt;p&gt;I am grateful for Google, my mentors, other org members as well as my GSoC peers to make this a particular fun-filled and memorable project! I have learned so much from the experience that even money cannot buy in terms of programming and soft skills. I wish Google will continue this program or initiate some similar program to continue cultivating new generations of open-source software developers / development enthusiasts to further our aim to make open-source approachable and usable for all.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=eb6b2bccce85" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200823_0807_kakirastern/</guid><pubDate>Sun, 23 Aug 2020 07:07:23 GMT</pubDate></item><item><title>GSOC 2020: New additions to old PRs</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;div&gt;&lt;h4&gt;GSOC 2020: Polishing my code&lt;/h4&gt;&lt;p&gt;I spent last most of the previous two weeks on resolving reviews on my old PRs and improving gallery examples.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/852/0*fsXbXhCmI6jKwUv6.jpg"&gt;&lt;figcaption&gt;Heavy rains begins in Vadodara&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Knowing time intervals from URL patterns&lt;/h4&gt;&lt;p&gt;I created &lt;a href="https://github.com/sunpy/sunpy/pull/4419"&gt;PR #4419&lt;/a&gt; that allows getting file time-ranges from the URL using the scraper. The URL patterns from most of the archives have start time in them. Either the end time was usually hardcoded for all clients or we only used start time to validate the file URLs against a time interval.&lt;/p&gt;
&lt;p&gt;In my Clients Generalization, to escape this repetitiveness the code in post_search_hook() was somewhat less generalized. It was assumed that all files are day-long. Thus I generalized it and moved it to the scraper. From the base URL pattern, we can now the precision of time supported by the archive directories, and then using them we can find the end times. Say there are yearly files in an archive. Then we can default the end time to the end of that year. Moreover, if this time range overlaps with the searched time interval, the file is valid. We check it using _check_timerange().&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h4&gt;Removed optional from class attributes&lt;/h4&gt;&lt;p&gt;We now need to register all ‘attrs’ supported by the client in PR #4321. This helped me to escape from defining optional attrs. We use register_values() only to know whether the client can serve the query or not.&lt;/p&gt;
&lt;h4&gt;Fido metadata queries Gallery Example&lt;/h4&gt;&lt;p&gt;I have added a new gallery example in &lt;a href="https://github.com/sunpy/sunpy/pull/4358"&gt;PR #4358&lt;/a&gt; which summarizes what we can do after the pull request is merged. We can make metadata queries and easily inspect them. A lot of minor improvements were also made in the PR.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/0e1004e2649bfd262dda2f4e37fed4a8/href"&gt;https://medium.com/media/0e1004e2649bfd262dda2f4e37fed4a8/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Extracting client responses from Fido result&lt;/h4&gt;&lt;p&gt;Earlier we have to specify index as an argument to get_response() to do that. It required us to count the records to find the correct index. Now we can easily use the name of the client to retrieve QueryResponse instances for that client. If there are multiple such records, then a list of all matching records will be returned.&lt;/p&gt;
&lt;h4&gt;ToDos for the final two weeks&lt;/h4&gt;&lt;p&gt;I have to document how to write Fido clients and add tests to the Fido metadata compatibility. Let’s see what other issues I can tackle in these pull requests.&lt;/p&gt;
&lt;p&gt;Till then,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAPRE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=c2d1683fe428" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200811_1829_abhijeetmanhas/</guid><pubDate>Tue, 11 Aug 2020 17:29:54 GMT</pubDate></item><item><title>GSoC 2020: glue-solar project 3.1</title><link>http://openastronomy.org/Universe_OA/posts/2020/08/20200809_2322_kakirastern/</link><dc:creator>Kris Stern</dc:creator><description>&lt;div&gt;&lt;p&gt;The 3rd coding period of GSoC 2020 will officially conclude in 2 weeks time. I would like to take this opportunity to review the progress made thus far, and to outline what other major feature can be added to glue-solar, perhaps over the remaining 2 weeks and beyond.&lt;/p&gt;
&lt;p&gt;We have finally resumed code reviews for the remaining PRs in the glue repo, and I am happy to report that the PR dealing with adding a preferred_cmap attribute to the visual module of glue/core has been merged four days ago from today. This is a very memorable milestone as this is my first contribution to the glue codebase. The remaining PRs which are being worked on include the 1D Profile PR (&lt;a href="https://github.com/glue-viz/glue/pull/2156"&gt;PR #2156&lt;/a&gt;) as well as the wcs auto-linking PR (&lt;a href="https://github.com/glue-viz/glue/pull/2161"&gt;PR #2161&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Regarding our work at the glue-solar repo, all of the PRs reviewed except the two experimental ones has been merged. A User’s Guide and a Developer’s Guide have been added to the &lt;a href="https://glue-solar.readthedocs.io/en/latest/"&gt;docs&lt;/a&gt;, while there is one open WIP PR which I am working on to add both a contributing document and the code references (or API) for the repo. Also some docs introducing users on how to start their own extensions in glue-solar for conducting solar physics has been planned.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;All of the above will form the bulk of work to be submitted for the GSoC project.&lt;/p&gt;
&lt;p&gt;More can be done for glue-solar, including but not limited to the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add NDData support to glue via glue-solar&lt;/li&gt;&lt;li&gt;Add instrument loader code from sunkit-instruments to glue-solar&lt;/li&gt;&lt;li&gt;Enable image / Movie exports, both with axes and without axes via matplotlib&lt;/li&gt;&lt;li&gt;Add support for pre-computed statistics in datasets / viewers.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Hopefully with the support of the mentors much of what has been planned can be brought to fruition, so that this project will be a successful one.&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=4aebd6964154" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/08/20200809_2322_kakirastern/</guid><pubDate>Sun, 09 Aug 2020 22:22:40 GMT</pubDate></item><item><title>Chapter 3 : The Search Events Object</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1932_raahul-singh/</link><dc:creator>Raahul Singh</dc:creator><description>&lt;div&gt;&lt;h4&gt;Chapter 3 : The Search Events Object&lt;/h4&gt;&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ec306bbf6e51" width="1" height="1"&gt;
&lt;!-- TEASER_END --&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1932_raahul-singh/</guid><pubDate>Tue, 28 Jul 2020 18:32:44 GMT</pubDate></item><item><title>GSOC 2020: Metadata searches using Fido</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/816/0*hF5ggLHngI8p-yaa"&gt;&lt;figcaption&gt;Missed Comet NEOWISE due to annoying cloud cover in Vadodara straight for 2 weeks :(&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;And that’s the central theme of the project :)&lt;/p&gt;
&lt;p&gt;It would now be possible to query clients that return metadata tables using Fido. So SunPy’s &lt;strong&gt;Fido&lt;/strong&gt; is a unified interface that allows searching and downloading solar physics data. In other words, it is a consistent and easy way to query most forms of solar physics data. It searches various archives and web services based on search attributes specified in the query.&lt;/p&gt;
&lt;p&gt;SunPy currently supports metadata facilities viz., JSOC Client, HEK Client, and Helio Client.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;SunPy’s hek module is used to access the information in the &lt;strong&gt;Heliophysics Event Knowledgebase&lt;/strong&gt; (HEK). HEK helps solar and heliospheric researchers locate features and events of interest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Joint Science Operations Center&lt;/strong&gt; (JSOC) supports data products from various observatories and solar physics instruments.&lt;/p&gt;
&lt;p&gt;But they were not Fido compatible for metadata searches. PR #4358 addresses it.&lt;/p&gt;
&lt;h4&gt;Generic Class for metadata clients&lt;/h4&gt;&lt;p&gt;Since a lot of methods were similar in these clients, so I made a new superclass for them. JSOC, Helio, and HEK responses now inherit BaseQueryResponseTable to ease inspecting data retrieved through their clients. The idea was to retain the old look of response tables and also support a method to show all columns if required.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/abb67aed8bc120d39e874af9ef9ab599/href"&gt;https://medium.com/media/abb67aed8bc120d39e874af9ef9ab599/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Deprecations&lt;/h4&gt;&lt;p&gt;~sunpy.net.hek.attrs.Time is deprecated since we can now use ~sunpy.net.attrs.Time for HEK queries, making it redundant.&lt;/p&gt;
&lt;p&gt;I also deprecated ~sunpy.net.jsoc.attrs.Keys because now the response table contains all keys by default. Users can specify the column names as *args in :meth:~sunpy.net.hek.HEKResponse.show for getting an ~astropy.table.Table instance containing only those columns.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/d663f6878e23ecc59cd3f0b7cce932ef/href"&gt;https://medium.com/media/d663f6878e23ecc59cd3f0b7cce932ef/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;Finally, HEKTable was renamed to HEKResponse for consistency in naming.&lt;/p&gt;
&lt;h4&gt;Devguide for writing Fido Clients&lt;/h4&gt;&lt;p&gt;I have explained how to write a simple Fido client in &lt;a href="https://github.com/sunpy/sunpy/pull/4387"&gt;PR 4387&lt;/a&gt;. This was the first documentation pull request that I made in SunPy. Work is in progress for adding details of writing an “AttrWalker” and registring an “Attr” for Fido.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/449c51d6f6528dbb0a236344fe4a9524/href"&gt;https://medium.com/media/449c51d6f6528dbb0a236344fe4a9524/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Other Stuff&lt;/h4&gt;&lt;p&gt;I reviewed&lt;a href="https://github.com/sunpy/sunpy/pull/4394"&gt; PR #4394&lt;/a&gt;, which allows XRSClient to download reprocessed data for GOES Satellites. I also need to add support for this new pattern in my &lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;dataretriever refactoring pull request, #4321&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also go through the discussions present in the net issues so I can fit their fixes in my project. I also suggest updates to the description of outdated issues and check if they still persist, like in &lt;a href="https://github.com/sunpy/sunpy/issues/2401"&gt;Issue #2401&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/issues/2032"&gt;Issue #2032&lt;/a&gt; was fixed, so now helio wsdl_retriever returns the first valid taverna link.&lt;/p&gt;
&lt;p&gt;We are going to now enter the last phase of the work period!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CARPE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=909bda98b771" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200728_1816_abhijeetmanhas/</guid><pubDate>Tue, 28 Jul 2020 17:16:19 GMT</pubDate></item><item><title>GSoC 2020: glue-solar project 2.2</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200726_1213_kakirastern/</link><dc:creator>Kris Stern</dc:creator><description>&lt;div&gt;&lt;p&gt;The end of the 2nd Coding Period of this year’s Google Summer of Code has finally arrived. I cannot help but noticed the many things I have learned/built over the past two months for both the &lt;a href="http://glueviz.org/"&gt;glue&lt;/a&gt; Graphical User Interface (GUI), as well for its solar physics plugin glue-solar. One of the tricks I have learned is writing up tests for the GUI programming I have done in the process, which is using Qt for Python to port the entire &lt;a href="https://wiki.qt.io/PySide"&gt;PySide&lt;/a&gt; module to Qt5. My main approach is quite simple: Imitate, modify, test. Since glue has a fairly well developed codebase, it is not hard to find sample code snippets within it for inspiration of new code to add. The GUI unit tests are no exception to this rule. And, I would like to use the opportunity to share the experience with more novice contributors to the software, so perhaps somehow someone else somewhere down the line will be able to benefit from this.&lt;/p&gt;
&lt;p&gt;The first and foremost concern we should have regarding any type of unit testing is what we should check for functionality-wise. Let me take some code I have just written over the past few days which adds NDData (a data structure native to Astropy) support to glue and enables the loading of various types of astronomical data more readily, such as the standard FITS files. As I have discussed with my mentors via the glue-solar IRC channel, we have observed that NDData is much like laser was back in the 1960’s (e.g. as &lt;a href="https://www.nytimes.com/1964/05/06/archives/developer-of-the-laser-calls-it-a-solution-seeking-a-problem.html"&gt;reported by NYTimes&lt;/a&gt; then) was a solution in search of a problem before its wider adoption by the astronomy community for LSST, DKIST and CCDProc data. Now we are in the process of integrating it into glue. The original conception of this, at least in principle, is to use the simple and fluid structure of NDData to help process for example FITS data. This is because there are no generic NDData files in existence at all. This is to facilitate the manipulation of not only the data component, but also its units, mask, uncertainty, and meta attributes, which are quite common in the handling of astronomical data (pun intended). With such a motivation in mind, we have added a nddata.py module to the glue/core/data_factories directory in a &lt;a href="https://github.com/glue-viz/glue/pull/2164"&gt;PR&lt;/a&gt; at glue. To complete the PR, it is standard practice to add tests where applicable, so we have added a testing module called test_nddata.py in the glue/core/data_factories/tests directory to not only serve as a routine, but also to test whether the code has been properly debugged, which caught all of the major known bugs I have inadvertently introduced to the codebase before testing.&lt;/p&gt;
&lt;p&gt;The GUI unit test I have written is as follows:&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200726_1213_kakirastern/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/ba8b2229df9cf1b5b160c70096612af9/href"&gt;https://medium.com/media/ba8b2229df9cf1b5b160c70096612af9/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;I have studied the other tests in the same glue/core/data_factories/tests carefully before I proceed to write the code, as I have observed that the most basic test to write is to test the data loader. Of course, official docs helped me greatly as well. As for the formatted NDData factory, that would be hard to test. I will need to consult with my mentors, before deciding on whether a separate unit test for that later.&lt;/p&gt;
&lt;p&gt;One takeaway I have come away with in the process is that sufficient time is needed before I could brainstorm and come up with a tangible plan to write unit tests for any established codebase, and that I should not rush through the process. This is a lesson that I will definitely keep in mind. There is no use going through the motion and not enjoying the process as I go along, not to mention the omissions that I would make otherwise without a well thought-out plan.&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=db0e0ef935b2" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200726_1213_kakirastern/</guid><pubDate>Sun, 26 Jul 2020 11:13:28 GMT</pubDate></item><item><title>GSOC 2020: End of the First Half</title><link>http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/</link><dc:creator>Abhijeet Manhas</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*L9pxwg-v0q0SppOR.jpg"&gt;&lt;figcaption&gt;Comet C/2020 F3 (NEOWISE) will be visible in India for the next 20 days!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;So now I’m halfway through the Summer of Code Journey. The last two weeks have been full of code reviews, code refactoring, and documenting stuff. I also helped new contributors to the SunPy to get them started. Thus I interacted more with the community this time.&lt;/p&gt;
&lt;h4&gt;Making HEC Fido Compatible&lt;/h4&gt;&lt;p&gt;HEC stands for &lt;strong&gt;Heliophysics Event Catalogue&lt;/strong&gt;. For your information, Heliophysics events are a large variety of phenomena that:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;originate or occur on the Sun.&lt;/li&gt;&lt;li&gt;Propagate through the interplanetary medium.&lt;/li&gt;&lt;li&gt;Interact with the geospace and planetary analogs.&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*7_zVGR8NSlvJ4vOi.jpg"&gt;&lt;figcaption&gt;An illustration of an Heliophysics Event| Earth’s magnetic field shielding our planet from solar particles. Credit: NASA/GSFC/SVS&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;HEC allows complex searches for events stored in indexed catalogs. SunPy has a HECClient which allows you to interface with Helio web services.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;In &lt;a href="https://github.com/sunpy/sunpy/pull/4358"&gt;PR #4358&lt;/a&gt; to enable Helio metadata searches with Fido (Federated Internet Data Obtainer), I made it inherit ~sunpy.net.BaseClient and overwrote a few methods for the client. New hec-specific attrs like MaxRecords, TableName, and Catalogue were defined to make _can_handle_query() work.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/8cebddc67806c7e7130b0e70722fa975/href"&gt;https://medium.com/media/8cebddc67806c7e7130b0e70722fa975/href&lt;/a&gt;&lt;/iframe&gt;&lt;p&gt;A new class HECResponse was added to contain the responses retrieved after the search is executed. This made helio queries possible through Fido, although there are yet a lot of things that can be improved.&lt;/p&gt;
&lt;h4&gt;Updated tests for client redesign!&lt;/h4&gt;&lt;p&gt;&lt;a href="https://github.com/sunpy/sunpy/pull/4321"&gt;PR #4321&lt;/a&gt; (nice number!) is a major refactoring pull request for sunpy’s dataretriever module. So far it has negative 1500 lines of code.&lt;/p&gt;
&lt;p&gt;Finally SUVIClient was generalized which was the toughest of its counterparts. It supports the highest number of attributes. These are `Time`, Source, Instrument, Phsyobs, Provider, Level, Wavelength, and SatelliteNumber.&lt;/p&gt;
&lt;p&gt;The row data for the response table can either be contained as a dictionary or as data members of a class. A small hack made me achieve both. QueryResponseBlock was re-welcomed to the client.py. It now inherits OrderedDict and has dict values as class data members too. Passed Ordered Dictionary was used to update its self.__dict__.&lt;/p&gt;
&lt;iframe src="http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/" width="0" height="0" frameborder="0" scrolling="no"&gt;&lt;a href="https://medium.com/media/b8dae93e3cdf41797f7797b54de3573b/href"&gt;https://medium.com/media/b8dae93e3cdf41797f7797b54de3573b/href&lt;/a&gt;&lt;/iframe&gt;&lt;h4&gt;Other Stuff&lt;/h4&gt;&lt;p&gt;My mentor made a list of 38 issues in Sunpy that were related to the project. I went through all of them and labeled them based on the submodules they are concerned with, how much I understand them, and their relevance with the GSoC project. Some of them were overlapping with things in my mind, so existing discussions on them shall be really helpful for me.&lt;/p&gt;
&lt;p&gt;I also spent time on writing the guidelines to extend Fido and how to add new sources to it, based on the redesign.&lt;/p&gt;
&lt;p&gt;Looking forward to capturing the comet in the coming days and having an awesome second half!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CARPE NOCTEM!&lt;/strong&gt;&lt;/p&gt;
&lt;img src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ec4589cc452f" width="1" height="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2020/07/20200714_2212_abhijeetmanhas/</guid><pubDate>Tue, 14 Jul 2020 21:12:28 GMT</pubDate></item></channel></rss>