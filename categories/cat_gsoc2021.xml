<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts about gsoc2021)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/categories/cat_gsoc2021.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 20 Jun 2021 17:55:39 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>GSoC Post 1</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210620_1617_ndanzanello/</link><dc:creator>ndanzanello</dc:creator><description>&lt;div&gt;&lt;p&gt;Hey there. I am working on the Astrometry project from Gnuastro and I will explain below the first things that I have been doing.&lt;br&gt;&lt;br&gt;Basically, we have two catalogs: one is the query catalog, which we want to find its wcs, and the reference catalog, that gives some stars positions in celestial coordinates. We begin finding “quads”, a group of 4 stars, on both catalogs. This part was already done, but the matching part between the quads needed some fixes.&lt;/p&gt;


&lt;!-- TEASER_END --&gt;

&lt;p&gt;The first thing we needed to fix was the vertices found on each catalog. It’s very important that all the vertices are labeled the same. First, we label the A and B vertices as the most separated ones. In the query catalog it’s just the Euclidean distance between the points, but on the reference catalog we have to use the angular distance between the points to get the same vertices. Prior to that, it was also using the Euclidean distance to the vertices on the reference catalog, so it would give different most separated A and B for the two catalogs.&lt;br&gt;After that, we have to choose the C and D vertices. First we label randomly the two remaining vertices as C and D and then we compare the ACB and ADB angles that are less than 180 degrees and choose C to be the one that has the lesser angle.&lt;/p&gt;



&lt;p&gt;Now, we have the A, B, C and D vertices to be the same when dealing with the same quads and we have to compute their hashes. The hashes were calculated using Cx = (c1-a1)/(b1-a1), where a1, b1 and c1 are the coordinates along the axis 1. Now we have the problem related to the rotations: the distance between the points is the same, but the distance along each axis is not the same! So the Cx would be different for different axis. The same would happen for Cy, Dx and Dy.&lt;/p&gt;



&lt;p&gt;To solve this, first we transform the celestial coordinates of the reference catalog into projection plane coordinates (TAN projection) using the midpoint of AB as the coordinates of the native pole.&lt;br&gt; We proceed defining new two axis (x and y, where the hashes will be calculated) using the A-B vector as a 45 degrees line contained in these axis. Then, we project the C-A and D-A vectors in these axis and get the hashes.&lt;/p&gt;



&lt;p&gt;The image below show an overview of the steps explained above.&lt;/p&gt;



&lt;figure class="wp-block-image size-large"&gt;&lt;img alt="" class="wp-image-56" src="https://ndanzanello.files.wordpress.com/2021/06/match_overview.png?w=1024"&gt;&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>gnuastro</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210620_1617_ndanzanello/</guid><pubDate>Sun, 20 Jun 2021 15:17:45 GMT</pubDate></item><item><title>GSoC - 1</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210620_0300_gagan-aryan/</link><dc:creator>Gagan Aryan</dc:creator><description>&lt;div&gt;&lt;p&gt;This is the first blog that documents the coding period of my GSoC21 journey. I learnt a few interesting things in these two weeks, as I expected I would. So, let’s dive in and see if you knew few of these stuff I learnt.&lt;/p&gt;
&lt;h3 id="starting-off-"&gt;Starting off !!!&lt;/h3&gt;
&lt;p&gt;I started off by getting a brief idea of the scope of the changes that could be done to the dataframe. This was the task I had decided on for the first week. Whenever we are involved in a project that runs for a period of anywhere between 2-4 months it is important to have a timeline or a roadmap of sorts to be able to look back to. This doesn’t really have to be something rigid. We can chose to deviate from it and infact deviations are bound to happen due to multiple reasons. It can happen because of an unexpected bug in between, or because you came across some alternative that you did not consider at the start or simply because it is one of those projects that gives better insights as you dwell into it.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Every good GSoC proposal consists of a tentative timeline that depicts the work we plan on doing as the weeks progress. Here is the timeline I had submitted in my proposal.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Timeline1" src="https://gagan-aryan.netlify.app/images/gsoc-1/timeline1.png"&gt;&lt;br&gt;
&lt;img alt="Timeline2" src="https://gagan-aryan.netlify.app/images/gsoc-1/timeline2.png"&gt;&lt;/p&gt;
&lt;p&gt;So as per this I was supposed to finish off the refactors to the dataframe and also finish setting up the benchamarks. But I was unable to complete these. I had underestimated the work it would take to complete them. Nonetheless, I also did have some time to look up at the things I am supposed to do in the second half of the coding period.&lt;/p&gt;
&lt;h3 id="memory-and-time-performance-benchmarks---tic-tok"&gt;Memory and Time performance benchmarks - Tic-Tok&lt;/h3&gt;
&lt;p&gt;Before making any changes to the codebase Erwan suggested me to have the benchmarks setup. So what do I mean by this? To make sure that the changes I am making to the code are indeed reducing the memory consumption of the computations we use a few tools that help us track the memory consumption for various calculations as a function of git commits. There are multiple tools that help us do this. Radis already used a tool developed by &lt;a href="https://github.com/airspeed-velocity/asv"&gt;airspeed velocity&lt;/a&gt; to track the memory computions. I ran into a lot of troubles in setting these up and a lost a lot of valuable time in the process ultimately Erwan fixed it and I was able to run the benchmarks on my machine.&lt;/p&gt;
&lt;p&gt;The benchmarks still seem to take a lot of time to run though and for them to be feasible to be used a tool through which I can check the performance regularly there are a few things I need to learn. I hope to pick these up in the next few days.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Performance" src="https://gagan-aryan.netlify.app/images/gsoc-1/brace-yourselves.png"&gt;&lt;/p&gt;
&lt;p&gt;We are also trying to look at a few other alternatives that can be used instead of asv. I will update the you guys regarding this in the next blog post.&lt;/p&gt;
&lt;h3 id="oh-pandas-here-i-deal-with-you-"&gt;Oh Pandas here I deal with you !&lt;/h3&gt;
&lt;h4 id="lets-ditch-a-few-columns"&gt;Let’s ditch a few columns&lt;/h4&gt;
&lt;p&gt;We can reduce the memory usage of pandas by using one really simple trick - avoid giving loading the columns that are not required for computation. Below I demostrate how just dropping a few columns can provide significant improvement in the memory consumption. I am using &lt;code&gt;HITEMP-CH4&lt;/code&gt; database for demonstration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre class="chroma"&gt;&lt;code class="language-python"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;radis.io.hitran&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;hit2df&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hit2df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"06_HITEMP2020_2000.0-2500.0.par"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memory_usage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"deep"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;30.5&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"iso"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memory_usage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"deep"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;25.4&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The peak memory usage before dropping the columns was 30.5 MB and once I remove a few columns the peak memory usage becomes 25.4 MB. I have already implemented the dropping of id column and handled the case of single isotope as well by dropping the column and istead just storing the information of the isotope as a meta attribute. We have also finalised on the discarding of the other columns by considering the physics of these quantities. Let’s check out a few of them. Since I haven’t already implemented the optimisations that follow I will save the implementation details for the next blog.&lt;/p&gt;
&lt;h4 id="einsteins-coeffecients-and-linestrengths"&gt;Einstein’s Coeffecients and Linestrengths&lt;/h4&gt;
&lt;p&gt;There are four parameters of interest to describe the intensity of a line : Linestrength $(int)$, Einstein emission coefficient $(A)$ and Einstein absorption coefificent $(B_{lu})$, Einstein induced emission coefficient $(B_{ul})$. All of them are somehow linked to the Squared Transition Dipole Moment $(R)$. &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;$$ B_{lu}=10^{-36}\cdot\frac{8{\pi}^3}{3h^2} R_s^2 \cdot 10^{-7} $$&lt;br&gt;
$$ B_{ul}=10^{-36}\cdot\frac{8{\pi}^3}{3h^2} \frac{gl}{gu} R_s^2 \cdot 10^{-7} $$&lt;br&gt;
$$ A_{ul}=10^{-36}\cdot\frac{\frac{64{\pi}^4}{3h} {\nu}^3 gl}{gu} R_s^2 $$&lt;/p&gt;
&lt;p&gt;So now the idea would be to drop the $int$ column and use $A_{ul}$ to calculate the value of $int$ from it. The reason to drop $int$ and not $A_{ul}$ some databases like &lt;code&gt;ExoMol&lt;/code&gt; databases only provide the value of $A_{ul}$.&lt;/p&gt;
&lt;h4 id="concat-better"&gt;Concat better&lt;/h4&gt;
&lt;p&gt;For anyone who wants concate multiple datafiles pandas tends to become useless as the memory scales up. I started out experimenting concat operations inorder to cluster the isotopes of each type, run computations on them and later concat them. But I later learnt that since this data is already in the form of a single dataframe, indexing is a better parameter to track the memory consumption. Nonetheless there are a few other places in Radis where we process multiple files and concat them, hence this experiment would help us decide how we can chose to replace the current approach with a better one. I tried out three methods. I was using some random dummy datafiles of around 780 MBs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normal &lt;code&gt;pandas.concat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Concat with a doubly ended queue&lt;/li&gt;
&lt;li&gt;Concat with parquet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the results of each of these methods -&lt;/p&gt;
&lt;div class="tab" id="cbbfde2b70afc7e2"&gt;
&lt;div class="tab__links"&gt;
&lt;button class="tab__link"&gt;pandas.concat&lt;/button&gt;
&lt;button class="tab__link"&gt;deque&lt;/button&gt;
&lt;button class="tab__link"&gt;parquet&lt;/button&gt;
&lt;/div&gt;
&lt;div class="tab__content" id="c6b1e010ed52c9f8"&gt;
&lt;h4 id="pandasconcat"&gt;pandas.concat&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;CPU Time - 0:02:43.797588
Peak Memory Usage - 4.1050 GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="tab__content" id="a412292f0cf68165"&gt;
&lt;h4 id="pandasconcat-with-a-doubly-queue"&gt;pandas.concat with a doubly queue&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;CPU Time - 0:02:34.484612
Peak Memory Usage - 3.7725 GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="tab__content" id="c655ff276a8106d7"&gt;
&lt;h4 id="concat-with-parquet"&gt;Concat with parquet&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;CPU Time - 0:01:37.984875
Peak Memory Usage - 1.6829 GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Looking at the results, parquet seems like a really good option to me. But we will run for a few more examples and later check which one suits the best.&lt;/p&gt;
&lt;h3 id="the-next-two-weeks"&gt;The next two weeks&lt;/h3&gt;
&lt;p&gt;The project is making progress in all fronts. I feel I need to reorganize my thoughts a bit. My main work for now would be to complete the task list of &lt;a href="https://github.com/radis/radis/pull/287"&gt;this pr&lt;/a&gt;. And then look at other stuff.&lt;/p&gt;
&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/science/article/pii/S0022407398000788?via%3Dihub"&gt;Rothmann Paper (Eqs.(A7), (A8), (A9)&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:1"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210620_0300_gagan-aryan/</guid><pubDate>Sun, 20 Jun 2021 02:00:06 GMT</pubDate></item><item><title>A Summer of Coding and Astronomy — GSoC’21 at OpenAstronomy</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210607_1403_rachittshah/</link><dc:creator>Rachitt Shah</dc:creator><description>&lt;div&gt;&lt;h4&gt;A Summer of Coding and Astronomy — GSoC’21 at OpenAstronomy&lt;/h4&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/400/0*5kDNG2NTio40EKZh.gif"&gt;&lt;/figure&gt;&lt;h4&gt;“In real open source, you have the right to control your own destiny.”&lt;/h4&gt;&lt;p&gt;— Linus Torvalds&lt;/p&gt;
&lt;p&gt;Google Summer of Code is probably the most notable and interesting programs a student can be a part of an undergrad can be a part of. From reading GSoC blogs to write my story, it feels unnatural.&lt;/p&gt;
&lt;p&gt;This post is more of an introduction to GSoC and my project at OpenAstronomy, I’ll be covering my prep and journey later on.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h4&gt;About my GSoC project!&lt;/h4&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/0*VCNaN41xLMATNTgC"&gt;&lt;figcaption&gt;The DAVE engine!&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Generating periodograms for astronomical data is the core task of Stingray. Because periodograms are often noisy, several methods to denoise periodograms exist in the literature, among them the multi-taper periodogram Stingray aims to provide a comprehensive library of reliable, well-tested implementations of common algorithms for time series analysis in Astronomy. DAVE is an elegant GUI to the library, developed during a previous GSoC.&lt;/li&gt;&lt;li&gt;Due to the fast-evolving Python and Javascript landscape, this GUI is not compatible with the current versions of the dependencies. Also, Stingray has now new features that were not implemented in the original GUI.&lt;/li&gt;&lt;li&gt;In this project, I would be refreshing the GUI dependencies, update the package building infrastructure, and add the new functionality introduced in recent versions of Stingray.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I would be making sure DAVE would be up and running again over the summer, couldn’t have been happier!&lt;/p&gt;
&lt;h4&gt;About me&lt;/h4&gt;&lt;p&gt;I’m Rachitt Shah, a second-year undergrad at VIT Pune. I’m also doing Google Season of Docs with the STE||AR group for their project HPX.&lt;/p&gt;
&lt;p&gt;I’m a growth associate at gradCapital, a student-centric VC fund that aims to help student startups.&lt;/p&gt;
&lt;p&gt;I love product management, tech(of course!) and venture capital.&lt;br&gt;Here’s my social profiles link -&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/rachittshah"&gt;https://twitter.com/rachittshah&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/in/rachitt-shah/"&gt;https://www.linkedin.com/in/rachitt-shah/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have any questions about open-source and dev, don’t hesitate to reach out. &lt;br&gt;May the source be with you!&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a7d716df482e" width="1"&gt;&lt;/div&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210607_1403_rachittshah/</guid><pubDate>Mon, 07 Jun 2021 13:03:09 GMT</pubDate></item><item><title>Chapter 0: Prologue</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_2240_anandxkumar/</link><dc:creator>anandxkumar</dc:creator><description>&lt;div&gt;&lt;p&gt;Hi There and Namaste! This is going to be the second blog and first blog related to GSoC where I will be sharing my experience Community Bonding Period Experience with &lt;b&gt;Radis&lt;/b&gt;. Before moving ahead lets learn about GSoC and my perspective about it.&lt;/p&gt;
&lt;h3&gt;Google Summer of Code&lt;/h3&gt;
&lt;p&gt;GSoC or the way I like to say it &lt;strong&gt;(Great Summer Opportunity to Code ;)&lt;/strong&gt; is a program conducted and funded by Google to promote college students around the world to engage with Open Source Community and contribute to the organization for a tenure of 3 months. In the process, code is created and released for the world to see and use. But the main aim of GSoC is to promote students to stick to the organizations and help to grow the Open Source Community. This is a great initiative by Google that brings thousands of students every year and help them get an opportunity to peek into the world of open source development, learn new skills and also get compensated for the work, quite generously.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;I remember during second year of my college, it was around end of March and my roommate was applying for GSoC and I was like what is this program? There I got to know about it but since the deadline was near I was afraid of doing all the stuffs in a week of time, so I didn’t apply for it. Fast forwarding to next year, I was prepared enough this time and I feel priviledged to be a part of GSoC as part of OpenAstronomy. &lt;/p&gt;
&lt;h3&gt;My GSoC Project&lt;/h3&gt;
&lt;p&gt;I’m part of &lt;b&gt;&lt;a href="https://github.com/radis/radis"&gt;Radis&lt;/a&gt;&lt;/b&gt; organization which is a sub-org of &lt;a href="https://github.com/OpenAstronomy"&gt;OpenAstronomy&lt;/a&gt;. Radis is a fast line-by-line code used to synthesize high-resolution infrared molecular
spectra and a post-processing library to analyze spectral lines. It can synthesize absorption
and emission spectrum for multiple molecular species at both equilibrium and
non-equilibrium conditions.&lt;br&gt;
Radis computes every spectral line (absorption/emission) from the molecule considering
the effect of parameters like Temperature, Pressure. Due to these parameters, we don’t get
a discrete line but rather a shape with a width. This is called line broadening and for any spectral synthesis code, this is the bottleneck step. Ok let us C what my GSoC project is all about! &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Radis has 2 methods to calculate the lineshape of lines.&lt;br&gt;
● Legacy Method&lt;br&gt;
● DLM Method&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The goal of this project is to derive an equation comprising all parameters that affect the
performance for calculating Voigt broadening by running several benchmarks for different
parameters involved in the calculation of lineshapes to check their significance in
computation time. Then we need to find the critical value for the derived equation (&lt;code class="language-text"&gt;Rc&lt;/code&gt;)
which will tell us which optimization technique to select based on the computed &lt;code class="language-text"&gt;R&lt;/code&gt; value in
&lt;b&gt;calc_spectrum()&lt;/b&gt;. An &lt;code class="language-text"&gt;optimization = "auto"&lt;/code&gt; will be added that will choose the best method based on the parameters provided.&lt;/p&gt;
&lt;h3&gt;Community Bonding Period&lt;/h3&gt;
&lt;p&gt;The first phase of GSoC is the &lt;b&gt;Community Bonding Period&lt;/b&gt; which is a 3 weeks long period. Its main aim is allow the student to get familiar with the community and the codebase. It serves as a warm-up period before the coding period. The first thing I did was that I went though the original Radis &lt;a href="https://www.sciencedirect.com/science/article/abs/pii/S0022407318305867?via%3Dihub"&gt;paper&lt;/a&gt; and also the DLM implementation &lt;a href="https://ui.adsabs.harvard.edu/abs/2021JQSRT.26107476V/abstract"&gt;paper&lt;/a&gt; because our project objective is based on these 2 implementations. It helped me understand the main purpose of RADIS, its architecture and the science behind different steps of both equilibrium and non-equilibrium spectrum, though I have to accept these papers are way too technical for me :p (Complex Spectroscopy related formulas).&lt;br&gt; I believed inorder to get myself ready for the coding period, I shall focus on solving some related issues to make me more familiar with the codebase.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In order to compute any spectrum we need to determine several parameters like: minimum-maximum wavenumber, molecule, Temperature of gas, mole fraction, wstep, etc.&lt;br&gt;
&lt;code class="language-text"&gt;wstep&lt;/code&gt; determines the wavenumber grid’s resolution. Smaller the value, higher the resolution and vice-versa. By default radis uses &lt;code class="language-text"&gt;wstep=0.01&lt;/code&gt;. You can manually set the wstep value in &lt;b&gt;calc_spectrum()&lt;/b&gt; and &lt;strong&gt;SpectrumFactory&lt;/strong&gt;. To get more accurate result you can further reduce the value, and to increase the performance you can increase the value.&lt;/p&gt;
&lt;p&gt;Based on wstep, it will determine the number of gridpoints per linewidth. To make sure that there are enough gridpoints, Radis will raise an &lt;strong&gt;Accuracy Warning&lt;/strong&gt;. If number of gridpoints are less than &lt;code class="language-text"&gt;GRIDPOINTS_PER_LINEWIDTH_WARN_THRESHOLD&lt;/code&gt; and raises an &lt;strong&gt;Accuracy Error&lt;/strong&gt; if number of gridpoints are less than &lt;code class="language-text"&gt;GRIDPOINTS_PER_LINEWIDTH_ERROR_THRESHOLD&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So inorder to select the optimum value of &lt;code class="language-text"&gt;wstep&lt;/code&gt; I had to refactor the codebase such that we could compute the minimum FWHM (&lt;code class="language-text"&gt;min_width&lt;/code&gt;) value after calculating the HWHM of all lines and and set &lt;code class="language-text"&gt;wstep = min_width / GRIDPOINTS_PER_LINEWIDTH_WARN_THRESHOLD&lt;/code&gt;. All &lt;code class="language-text"&gt;wstep&lt;/code&gt; dependent parameters had to be refactored to make sure they are not being called before the calculating &lt;code class="language-text"&gt;min_width&lt;/code&gt;. At the end this feature was successfully merged in the develop branch of Radis and now users can use &lt;code class="language-text"&gt;wstep = "auto"&lt;/code&gt; to automatically get the optimal value of &lt;code class="language-text"&gt;wstep&lt;/code&gt;. This feature will be available from version &lt;b&gt;0.9.30&lt;/b&gt;. Here is the &lt;a href="https://github.com/radis/radis/pull/271"&gt;link&lt;/a&gt; of the merged PR.&lt;/p&gt;
&lt;p&gt;In short, the Community Bonding Period has been great and I have learned alot about Radis during this time. In the next 2 weeks I will be focussing on building a benchmarking framework and run various benchmarks for both Legacy and DLM method and determine the most influential paramters for performance.&lt;/p&gt;
&lt;p&gt;I’m very excited for the upcoming months. I know that this summer is going to be a life long experience and I’m really looking forward to do amazing things for the community and want to thank Google, OpenAstronomy, Radis and my mentors &lt;a href="https://github.com/erwanp"&gt;Erwan Pannier&lt;/a&gt;, &lt;a href="https://github.com/dcmvdbekerom"&gt;Dirk van den Bekerom&lt;/a&gt; and &lt;a href="https://github.com/pkj-m"&gt;Pankaj Mishra&lt;/a&gt; for this opportunity.
I’m ready for this amazing adventure.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;b&gt;LETS DO THIS&lt;/b&gt;&lt;br&gt;
&lt;img src="https://anandkumar-blog.netlify.app/2b4e6a4b663f4bc49d559484b8dd37b1/Start.gif"&gt;&lt;br&gt;
ps: Am a huge Spiderman Fan :p
&lt;/p&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_2240_anandxkumar/</guid><pubDate>Sun, 06 Jun 2021 21:40:32 GMT</pubDate></item><item><title>astropy@GSoC Blog Post #1</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_1659_suyog7130/</link><dc:creator>Suyog Garg</dc:creator><description>&lt;div&gt;&lt;div&gt;Hey there,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;How are you?&lt;/div&gt;&lt;div&gt;Chances are that you are coming across me for the first time.&lt;/div&gt;&lt;div&gt;Nice meeting you too! 😄&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  Since this is an introductory astropy@GSoC Blog Post, I would keep things   brief.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &lt;br&gt;  &lt;div class="separator" style="clear: both; text-align: center;"&gt;    &lt;img alt="" height="336" src="https://lh3.googleusercontent.com/-kVduvrsYzQ4/YL0ClAcy0hI/AAAAAAAA3Yk/PrbBQBkgxu8Y_f7-qpLAPlI6tr0zISXFgCLcBGAsYHQ/w336-h336/image.png" width="336"&gt;&lt;div style="margin-left: 1em; margin-right: 1em;"&gt;                      &lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://lh3.googleusercontent.com/-OkQcow92n4s/YL0DELFw56I/AAAAAAAA3Y0/43e2Ak8Bsy8VaTSw6RYB3ryocKQUCnM1ACLcBGAsYHQ/image.png" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img alt="" height="154" src="https://lh3.googleusercontent.com/-OkQcow92n4s/YL0DELFw56I/AAAAAAAA3Y0/43e2Ak8Bsy8VaTSw6RYB3ryocKQUCnM1ACLcBGAsYHQ/image.png" width="320"&gt;&lt;/a&gt;&lt;img alt="" height="169" src="https://lh3.googleusercontent.com/-qshucfTcxpY/YL0CwsGOS2I/AAAAAAAA3Yo/OGuKkhEkZtkmz3xw6qVy3YYTANGN5Zi2gCLcBGAsYHQ/w169-h169/image.png" style="text-align: center;" width="169"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As you probably already know, my name is Suyog and I am a participant for Google Summer of Code (GSoC) 2021. Over the course of the next 10 weeks or so, I will be working on the Astropy project under the umbrella organisation OpenAstronomy. During this while, I aim to add a CDS format writer to the Astropy library with the help of my affable mentors Aarya and Moritz.   &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I had actually also applied for GSoC last summer, however I had failed to pass   one of the eligibility criteria, and so wasn't selected. This astropy@GSoC   project, therefore, is quite an awesome opportunity for me. I am looking   forward to making the most of it and enjoying the time all the same. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There are two preliminary observations:&lt;/div&gt;&lt;div&gt;      1. The associated stipend, albeit somewhat lower than what used   to be the case a few years back, is freaking awesome. 😉 &lt;/div&gt;&lt;div&gt;      2. Dunno, why this project is marked as Difficultly Low!?   Nothing as easy as being just the third person to write a Table writer for the   world's largest Astronomy code library! 😂😎 &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Alright. Bye.&lt;/div&gt;&lt;div&gt;See ya the next time! 🙋‍♂️&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  Stay tuned for more GSoC updates, or what is far better, for the next post in   general. &lt;/div&gt;
&lt;!-- TEASER_END --&gt;&lt;/div&gt;</description><category>Astropy</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_1659_suyog7130/</guid><pubDate>Sun, 06 Jun 2021 15:59:00 GMT</pubDate></item><item><title>GSoC - 0</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_0300_gagan-aryan/</link><dc:creator>Gagan Aryan</dc:creator><description>&lt;div&gt;&lt;p&gt;I will be documenting my journey in the GSoC program under Radis (OpenAstronomy). This blog is the first in the series of those blogs and will contain a quick overview of what Google Summer of Code is, an intro to the organization I will be working with and the project I will be involved in, and what I did in the 20-day community bonding period.&lt;/p&gt;
&lt;h3 id="what-is-gsoc"&gt;What is GSoC?&lt;/h3&gt;
&lt;p&gt;I remember attending one of Programming Club IIT Kanpur’s lectures in my freshman year of college, and my senior just asked the students if they knew what GSoC was. I had no idea. But I glanced over to see if my peers knew something and saw a few of them nodding enthusiastically and a few others muttering among themselves. The senior didn’t explain what GSoC was, but he did ask us to check it out ourselves. I did. I wouldn’t save I understood the entire program back then since I didn’t even know what open source was.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Fast forward around 9-10 months, I started contributing to open source. I really felt it helped me skill up as a developer, which motivated me to participate in GSoC.&lt;/p&gt;
&lt;p&gt;Google Summer of Code or GSoC is a program sponsored by Google that aims to connect university students worldwide with open source organizations to promote the open-source culture. Students work with an open-source organization on a 10-week programming project during their break from school and get an opportunity to contribute to high-quality code, learn new skills, and also get compensated for the work. In turn, the organizations benefit from a few extra pairs of helping hands. Any college student interested in software development should definitely check out this program.&lt;/p&gt;
&lt;h3 id="radis-and-my-project"&gt;Radis and my project&lt;/h3&gt;
&lt;p&gt;Radis&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; is a fast line-by-line code for synthesizing and fitting infrared absorption and emmision spectra such as encountered in laboratory plasmas or exoplanet atmospheres.&lt;/p&gt;
&lt;p&gt;Radis aims to provide a wide array of features and remain user-friendly at the same so. It currently supports spectral calculations on databases like HTIRAN and high-temperature databases like HITEMP, CDSD-4000 with a future plan on extending the support to ExoMol. It comes with just a one-line install and post-processing tools for analysis of the spectra. Users can also combine ranges to create a mixture of gases or calculate radiative transfer along the line-of-sight.&lt;/p&gt;
&lt;p&gt;RADIS uses Pandas dataframe for handling all the databases currently. Quoting the words of Wes (the core dev of Pandas), “pandas rule of thumb: have 5 to 10 times as much RAM as the size of the dataset” &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;. Which makes it impossible to read, say, a database of size 5GB on a machine with a RAM of 16GB.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pandas Meme" src="https://gagan-aryan.netlify.app/images/gsoc-0/pandas_meme.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;The goal of this project would be first to reduce the memory usage of the current calculations. Then, we replace pandas with libraries that are better suited for handling larger-than-memory databases, which would make it possible to compute spectral databases of up to billions of lines (of the scale of hundreds of GB or terabytes). I will say the core technical details of the project for the upcoming blogs.&lt;/p&gt;
&lt;h3 id="community-bonding-period"&gt;Community Bonding Period&lt;/h3&gt;
&lt;p&gt;The Community Bonding Period is an almost 20-days long period meant to serve as a warm-up or a buffer before the actual coding period begins. It can be used for a wide variety of purposes, such as getting a better understanding of the codebase and figuring out its intricacies. I started out by quickly going over Spectro-102&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt; again since I had left out a few parts the last time I did. I then studied the RADIS &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; paper. Though I cannot really say the entire document, I did get a top-level idea of how it works and how it is different from other software.&lt;/p&gt;
&lt;h4 id="my-failed-attempts-in-wrapping-up-the-previous-work"&gt;My failed attempts in wrapping up the previous work&lt;/h4&gt;
&lt;p&gt;After my GSoC application, I started working on a feature request that asked a specific function in the code to return the wavelength and the intensity grid in sorted ascending order. I just assumed that all I need to do was sort the grids, and I did this and created a PR. I later learned that Radis, like any good codebase, has many tests that make sure things don’t break when a new change is made. Apparently, returning the wavelengths and intensity grid in the sorted order broke the physics when combining spectra.&lt;/p&gt;
&lt;p&gt;Before this PR, I was unaware of &lt;code&gt;pytests&lt;/code&gt;. I went through the documentation&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:4"&gt;4&lt;/a&gt;&lt;/sup&gt;, ran the tests on my machine, and checked out each of the failing tests. This helped me understand different parts of the code, especially the &lt;code&gt;spectrum&lt;/code&gt; and &lt;code&gt;los&lt;/code&gt; modules of the repository. The tests passed of the &lt;code&gt;spectrum&lt;/code&gt; module passed after a few modifications. But, after I updated Erwan regarding my progress, I realized that I need to now design new tests since we cannot pinpoint where we are having problems in the codebase with the existing ones. Besides, I learned about the different types of tests (non-regression, validation, and verification) that exist in RADIS to ensure things don’t break after a brief chat with Erwan.&lt;/p&gt;
&lt;p&gt;We have decided how we will tackle this issue, but since I am required to start on my project from tomorrow, I will be getting back to this PR later and hope to find time for the same during the coding period.&lt;/p&gt;
&lt;h4 id="discovery-during--hitemp-co2h2o-download-automation"&gt;Discovery during HITEMP (CO2/H2O) download automation&lt;/h4&gt;
&lt;p&gt;In the first phase of my project, I am required to use a few hacks&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:5"&gt;5&lt;/a&gt;&lt;/sup&gt; in the pandas and boost their memory performance. This includes dropping a few columns and changing the datatypes of a few others. Coincidentally Dirk encountered an issue while working on automating the download of CO2/H2O for HITEMP. So, CO2/H2O spectral databases contain multiple zip files, and automatic download of this was not supported in RADIS. Due to NaN values and the &lt;code&gt;np.uint&lt;/code&gt; not supporting them, the datatypes of a few columns conflicted when databases were added on top of one another. Currently, this is being handled by returning the parameters in the form of a memory inefficient &lt;code&gt;np.float64&lt;/code&gt;. I will have to bring them down to more suitable datatypes (&lt;code&gt;np.uint&lt;/code&gt;) most probably. This will probably be the first thing I will do as part of the project.&lt;/p&gt;
&lt;h3 id="the-next-two-weeks"&gt;The next two weeks&lt;/h3&gt;
&lt;p&gt;In the next two weeks I will be involved in figuring out and implement all the database pre-processing that can be done to boost pandas’ performance&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fn:4"&gt;4&lt;/a&gt;&lt;/sup&gt;. I will also setup memory performance benchmarks to track these changes. I am super excited to see how this project goes. I would like to thank Google, OpenAstronomy, RADIS and my mentors &lt;a href="https://github.com/erwanp"&gt;Erwan Pannier&lt;/a&gt;, &lt;a href="https://github.com/dcmvdbekerom"&gt;Dirk van den Bekerom&lt;/a&gt; and &lt;a href="https://github.com/pkj-m"&gt;Pankaj Mishra&lt;/a&gt;. I hope to learn a lot of stuff along the way and hopefully I will deliver. So,&lt;/p&gt;
&lt;p&gt;&lt;img alt="Let the Games Begin" src="https://media1.giphy.com/media/xT0xevozBTg7ChpL44/source.gif"&gt;&lt;/p&gt;
&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://gagan-aryan.netlify.app/tags/gsoc21/doi.org/10.1016/j.jqsrt.2018.09.027"&gt;RADIS: A nonequilibrium line-by-line radiative code for CO2 and HITRAN-like database species, E. Pannier &amp;amp; C. O. Laux&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:1"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;&lt;a href="https://wesmckinney.com/blog/apache-arrow-pandas-internals"&gt;Apache Arrow and the “10 Things I Hate About pandas”, Wes Mckinney&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:2"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;&lt;a href="https://mybinder.org/v2/gh/radis/spectro101/HEAD?filepath=102_lab_spectroscopy.ipynb"&gt;Spectro102&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:3"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;&lt;a href="https://radis.github.io/"&gt;Radis Documentation&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:4"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;&lt;a href="https://pythonspeed.com/articles/pandas-load-less-data/"&gt;Pythonspeed article - Pandas Load less data&lt;/a&gt; &lt;a class="footnote-backref" href="https://gagan-aryan.netlify.app/tags/gsoc21//index.xml#fnref:5"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210606_0300_gagan-aryan/</guid><pubDate>Sun, 06 Jun 2021 02:00:06 GMT</pubDate></item><item><title>Google Summer of Code</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210605_1932_dhruv9vats/</link><dc:creator>Dhruv Vats</dc:creator><description>&lt;div&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Y15akrnXqJ_b_aOeP_sTCQ.jpeg"&gt;&lt;figcaption&gt;A Black Hole-Star Binary. Credit: nasa.gov&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Google Summer of Code: My Introduction to OpenSource&lt;/h4&gt;&lt;p&gt;While I can’t come close to doing justice in explaining OpenSource, I would like to point out just how widespread its use is, and what better example for it than the most successful OpenSource project ever, that is, Linux. As far as statistics are concerned,&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;100% of the world’s top 500 supercomputers run on Linux.&lt;/li&gt;&lt;li&gt;96.3% of the world’s top 1 million servers run on Linux.&lt;/li&gt;&lt;li&gt;85% of all smartphones are based on Linux.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;So it suffices to say that most people have used OpenSource software one way or the other. But how does that concern me? A budding mind in the computing industry should have some familiarity with OpenSource, is an understatement. And that's where Google Summer of Code comes in.&lt;/p&gt;
&lt;p&gt;Straight from its landing page,&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;blockquote&gt;Google Summer of Code is a global program focused on bringing more student developers into open source software development.&lt;/blockquote&gt;&lt;h5&gt;The Motivation&lt;/h5&gt;&lt;p&gt;While talking about the intricacies of computing and its sophisticated relationship with science is a rabbit hole as deep as any, let’s talk motivation for a bit.&lt;/p&gt;
&lt;p&gt;Curiosity, I believe, is an inherent property of consciousness. This curiosity is most exposed in children, who, if you look for it, are intrigued by almost everything around them and try and understand it better. While this curiosity and the silly questions that come with it are overwhelmed by the problems of the here and now as we grow up, I think it is rather pleasant to visit those silly questions every so often, as the answers to some of them could tick off a line of thought that leads to discovery.&lt;/p&gt;
&lt;p&gt;One such revelating thought that I had and has stuck with me is when the idea of the vastness of the Universe started sinking in. I know, big words, but bear with me. As philosophical as it may sound, the thought that my existence is just an inconceivable dot on yet another pale blue dot from far away&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/290/1*4bvU5y61XMwH8E_wmKLdCw.png"&gt;&lt;figcaption&gt;A photograph of planet Earth taken on February 14, 1990, by&lt;a href="https://en.wikipedia.org/wiki/Voyager_1"&gt; the &lt;em&gt;Voyager&lt;/em&gt;&lt;/a&gt;&lt;em&gt; 1. &lt;/em&gt;Seen from about 6 billion kilometers (3.7 billion miles), Earth appears as a tiny dot within deep space: the blueish-white speck almost halfway up the brown band on the right. Source: &lt;a href="https://en.wikipedia.org/wiki/Pale_Blue_Dot"&gt;Wikipedia&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;was a comforting one. Why? I don’t know. But one thing this did was reignite my curiosity to better understand the world around me, and my place in it. While the discussion of the latter becomes too philosophical too soon, it is the former for which I’m writing this.&lt;/p&gt;
&lt;h5&gt;The Resistance&lt;/h5&gt;&lt;p&gt;Coming back to Earth, where sadly all my burdens still exist and I’m mostly consumed in “my little world”, I was quite intimidated by how little I knew, especially by the people on the Internet. While such a comparison is unjustified and foolish, this did become a roadblock that was amplified by this feeling that my work should amount to something meaningful.&lt;/p&gt;
&lt;p&gt;And considering where my career was headed it was time I let go of this feeling and actually start doing stuff. This, I think, is where OpenSource helps in that it has a place for you to contribute to no matter your skill level, while also constantly encouraging you to get better. You just have to put yourself out there, a challenge for someone like me.&lt;/p&gt;
&lt;p&gt;Here it is that Google Summer of Code does an excellent job of bridging the transition between learning stuff and actually doing something with that knowledge.&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/1024/1*I2MgGZwscyP4AjM2LGpYTA.png"&gt;&lt;/figure&gt;&lt;h5&gt;OpenAstronomy&lt;/h5&gt;&lt;p&gt;While this idea of me working on discovering stuff in the Universe is still as dreamy as ever, I would jump at an opportunity that would take me a step closer to that, if I could.&lt;/p&gt;
&lt;p&gt;I got in touch with one of OpenAstronomy’s sub-organizations, &lt;a href="https://github.com/StingraySoftware/stingray"&gt;Stingray&lt;/a&gt;, in February this year and started working on an algorithm used for better spectral estimation of time-series data as I had gained some familiarity with time-series data in my coursework. It was during the time when I was implementing the algorithm that I was given a time-series dataset to play around with. It was observed by an X-ray telescope as individual light photons hit its detector from the gas falling from a star into a black hole as they orbited around each other in a binary system.&lt;/p&gt;
&lt;p&gt;This just awakened the fascinated child inside of me and became the main motivation for working with OpenAstronomy.&lt;/p&gt;
&lt;p&gt;Looking forward to an exciting and different summer!&lt;/p&gt;
&lt;h5&gt;Cool Concepts?&lt;/h5&gt;&lt;p&gt;While a discussion about the Universe, life, and meaning is a thrill, constantly being in a state of mind where one does not lose such perspective is a different feat altogether. This perspective, which among other things, encourages one to ask those silly but fundamental questions, is something I long to have.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=8c89d5535bd6" width="1"&gt;&lt;/div&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210605_1932_dhruv9vats/</guid><pubDate>Sat, 05 Jun 2021 18:32:19 GMT</pubDate></item><item><title>Summer with SunPy ☀️</title><link>http://openastronomy.org/Universe_OA/posts/2021/06/20210603_0834_jeffreypaul15/</link><dc:creator>Jeffrey Paul</dc:creator><description>&lt;div&gt;&lt;p&gt;A couple of months ago, I was introduced to the world of open source by a few peers of mine and despite having the many unanswered questions about why open source software exists, eventually I decided to try my hand at it.&lt;/p&gt;
&lt;p&gt;In my previous post I had mentioned how I’d continue to be a contributor to SunPy regardless of the outcome of GSOC.&lt;/p&gt;
&lt;blockquote&gt;“I made a promise to myself that regardless of the outcome of my proposal, I will continue to contribute to this organization that taught me so much.”&lt;/blockquote&gt;&lt;p&gt;With that in mind, this showed up a couple of weeks later :&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/638/1*WnrYxkGo8nkbdKoDz-xCAA.png"&gt;&lt;/figure&gt;&lt;p&gt;Turns out things went my way and this gave me the motivation I was lacking for this summer.&lt;/p&gt;
&lt;p&gt;Well, my project is quite simple actually. &lt;strong&gt;SunPy&lt;/strong&gt; allows for visualization of spatially-aware data by means of Map objects. These objects have extensive 2D visualization capabilities for plotting various coordinate objects.&lt;/p&gt;
&lt;p&gt;My responsibility will be experimenting and tinkering around with these visualization capabilities and converting them into 3D with some extra added functionality! Seems pretty cool right? Well, it is!&lt;/p&gt;
&lt;p&gt;Here’s an example of what I’d be doing :&lt;/p&gt;
&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/191/1*QlX4LmZXc7e_C96fL-qHRA.png"&gt;&lt;figcaption&gt;Converting this&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/917/1*Omv0aIRFxR7VR9F6ruIBaQ.png"&gt;&lt;figcaption&gt;To this!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The entire project involves using &lt;strong&gt;Pyvista&lt;/strong&gt;, a python api for using the Visualization Toolkit. The entire project is part of a separate package affiliated with SunPy and you can find it &lt;a href="https://github.com/sunpy/sunkit-pyvista/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My first 2 weeks with SunPy went great! It involved learning and tinkering around with &lt;strong&gt;Sphinx &lt;/strong&gt;for documentation which I had never used before, figuring out what goes where and how it happens was pretty interesting.&lt;/p&gt;
&lt;p&gt;We’ve finally decided on how we’d go about producing unit tests for these plots, we uncovered an issue with &lt;strong&gt;PyVista &lt;/strong&gt;as well. The project mentors and I had a few discussions on how to render these 3D plots for display in our documentation, how this would impact the continuous integration builds as our current one seemed to be having a few issues with &lt;strong&gt;XVFB&lt;/strong&gt; server and displaying the plots correctly. These issues are yet to be fixed and a concrete solution is to be decided on.&lt;/p&gt;
&lt;p&gt;A few pull requests with the initial code to set up the package and provide basic plotting functionality was merged in and the package finally produces a 3D plot for any map in &lt;strong&gt;Sunpy&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;This marked the end of the community bonding phase of the project and in the coming weeks, I’ll be working on experimenting with rotation and &lt;strong&gt;AstroPy’s SkyCoord&lt;/strong&gt;. I’ll also be working on some plotting field lines from &lt;strong&gt;PfssPy&lt;/strong&gt; which would add some extra functionality to the library. I’ve finally gotten into getting my hands dirty with the code and I’m loving it.&lt;/p&gt;
&lt;p&gt;Well, that’s pretty much it for the first fortnight with &lt;strong&gt;SunPy&lt;/strong&gt;, looking forward to see how this project turns out, everything seems to be going well and I’m grateful to be working on this project with my mentors.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=f51440cfe218" width="1"&gt;&lt;/div&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2021/06/20210603_0834_jeffreypaul15/</guid><pubDate>Thu, 03 Jun 2021 07:34:39 GMT</pubDate></item><item><title>print(" Hello World!!! ")</title><link>http://openastronomy.org/Universe_OA/posts/2021/05/20210518_2240_anandxkumar/</link><dc:creator>anandxkumar</dc:creator><description>&lt;div&gt;&lt;p&gt;Hey everyone &lt;b&gt;Anand Kumar&lt;/b&gt; this side. This is going to be a series of blogs where I will cover my Summer Journey with &lt;b&gt;Radis&lt;/b&gt; organization as a part of Google Summer of Code. Welcome to my first blog where I will be introducing myself coz that is kind of necessary :p. I’m a Junior from National
Institute of Technology, Hamirpur, India currently pursuing my BTech in Computer Science and Engineering.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I am a geek. I love life, computers and everything in between!&lt;br&gt;
&lt;!-- TEASER_END --&gt;
I have been coding since my school days and soon realized that man this thing is so cool!
I am an A.I. enthusiast and have made various projects related to Data Analysis, Machine Learning, Deep Learning
and Web Development. Also I have completed a Data Analytics Internship at Pikkal &amp;amp; Co, Singapore and a
Deep Learning Internship at Mavoix Solutions Pvt Ltd, Bangalore.&lt;br&gt;
Currently I’m a Student Developer at OpenAstronomy organization as a part of Google Summer of Code 2021. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Wanna know a less known fact, I’m a huge hardcore video gamer! If I’m not coding, I will probably be killing some time
on my laptop or my Playstation console ;)&lt;/p&gt;
&lt;p&gt;Wanna know more about me and my work? Below are some links, do check out;)&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/anand-kumar-83896717a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/anandxkumar"&gt;github&lt;/a&gt;
| &lt;a href="https://anandkumar.netlify.app/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also one huge shout out to the guys at &lt;b&gt;GatsbyJS&lt;/b&gt; for providing such an amazing blogging template(keep it simple and clean, they say!).
The biggest advantage of this template is that every blog is written in &lt;b&gt;Markdown&lt;/b&gt;. So its gives alot of flexibility and functionality
to the user to edit their texts. Plus their templates codebase is easy to understand so anyone can just clone and get started!&lt;/p&gt;
&lt;p&gt;Anyways I guess this should wrap up this blog. See you in the next one where I will be starting my GSoC journey and discuss my project ;)&lt;br&gt;
Till then take care and ba-bye :)&lt;/p&gt;&lt;/div&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2021/05/20210518_2240_anandxkumar/</guid><pubDate>Tue, 18 May 2021 21:40:32 GMT</pubDate></item></channel></rss>